{
	"version": 3,
	"file": "main.css",
	"sources": [
		"main.scss",
		"assets/scss/main.scss",
		"assets/scss/bourbon/_bourbon.scss",
		"assets/scss/bourbon/settings/_prefixer.scss",
		"assets/scss/bourbon/settings/_px-to-em.scss",
		"assets/scss/bourbon/settings/_asset-pipeline.scss",
		"assets/scss/bourbon/functions/_assign-inputs.scss",
		"assets/scss/bourbon/functions/_contains.scss",
		"assets/scss/bourbon/functions/_contains-falsy.scss",
		"assets/scss/bourbon/functions/_is-length.scss",
		"assets/scss/bourbon/functions/_is-light.scss",
		"assets/scss/bourbon/functions/_is-number.scss",
		"assets/scss/bourbon/functions/_is-size.scss",
		"assets/scss/bourbon/functions/_px-to-em.scss",
		"assets/scss/bourbon/functions/_px-to-rem.scss",
		"assets/scss/bourbon/functions/_shade.scss",
		"assets/scss/bourbon/functions/_strip-units.scss",
		"assets/scss/bourbon/functions/_tint.scss",
		"assets/scss/bourbon/functions/_transition-property-name.scss",
		"assets/scss/bourbon/functions/_unpack.scss",
		"assets/scss/bourbon/functions/_modular-scale.scss",
		"assets/scss/bourbon/helpers/_convert-units.scss",
		"assets/scss/bourbon/helpers/_directional-values.scss",
		"assets/scss/bourbon/helpers/_font-source-declaration.scss",
		"assets/scss/bourbon/helpers/_gradient-positions-parser.scss",
		"assets/scss/bourbon/helpers/_linear-angle-parser.scss",
		"assets/scss/bourbon/helpers/_linear-gradient-parser.scss",
		"assets/scss/bourbon/helpers/_linear-positions-parser.scss",
		"assets/scss/bourbon/helpers/_linear-side-corner-parser.scss",
		"assets/scss/bourbon/helpers/_radial-arg-parser.scss",
		"assets/scss/bourbon/helpers/_radial-positions-parser.scss",
		"assets/scss/bourbon/helpers/_radial-gradient-parser.scss",
		"assets/scss/bourbon/helpers/_render-gradients.scss",
		"assets/scss/bourbon/helpers/_shape-size-stripper.scss",
		"assets/scss/bourbon/helpers/_str-to-num.scss",
		"assets/scss/bourbon/css3/_animation.scss",
		"assets/scss/bourbon/css3/_appearance.scss",
		"assets/scss/bourbon/css3/_backface-visibility.scss",
		"assets/scss/bourbon/css3/_background.scss",
		"assets/scss/bourbon/css3/_background-image.scss",
		"assets/scss/bourbon/css3/_border-image.scss",
		"assets/scss/bourbon/css3/_calc.scss",
		"assets/scss/bourbon/css3/_columns.scss",
		"assets/scss/bourbon/css3/_filter.scss",
		"assets/scss/bourbon/css3/_flex-box.scss",
		"assets/scss/bourbon/css3/_font-face.scss",
		"assets/scss/bourbon/css3/_font-feature-settings.scss",
		"assets/scss/bourbon/css3/_hidpi-media-query.scss",
		"assets/scss/bourbon/css3/_hyphens.scss",
		"assets/scss/bourbon/css3/_image-rendering.scss",
		"assets/scss/bourbon/css3/_keyframes.scss",
		"assets/scss/bourbon/css3/_linear-gradient.scss",
		"assets/scss/bourbon/css3/_perspective.scss",
		"assets/scss/bourbon/css3/_placeholder.scss",
		"assets/scss/bourbon/css3/_radial-gradient.scss",
		"assets/scss/bourbon/css3/_selection.scss",
		"assets/scss/bourbon/css3/_text-decoration.scss",
		"assets/scss/bourbon/css3/_transform.scss",
		"assets/scss/bourbon/css3/_transition.scss",
		"assets/scss/bourbon/css3/_user-select.scss",
		"assets/scss/bourbon/addons/_border-color.scss",
		"assets/scss/bourbon/addons/_border-radius.scss",
		"assets/scss/bourbon/addons/_border-style.scss",
		"assets/scss/bourbon/addons/_border-width.scss",
		"assets/scss/bourbon/addons/_buttons.scss",
		"assets/scss/bourbon/addons/_clearfix.scss",
		"assets/scss/bourbon/addons/_ellipsis.scss",
		"assets/scss/bourbon/addons/_font-stacks.scss",
		"assets/scss/bourbon/addons/_hide-text.scss",
		"assets/scss/bourbon/addons/_margin.scss",
		"assets/scss/bourbon/addons/_padding.scss",
		"assets/scss/bourbon/addons/_position.scss",
		"assets/scss/bourbon/addons/_prefixer.scss",
		"assets/scss/bourbon/addons/_retina-image.scss",
		"assets/scss/bourbon/addons/_size.scss",
		"assets/scss/bourbon/addons/_text-inputs.scss",
		"assets/scss/bourbon/addons/_timing-functions.scss",
		"assets/scss/bourbon/addons/_triangle.scss",
		"assets/scss/bourbon/addons/_word-wrap.scss",
		"assets/scss/bourbon/_bourbon-deprecated-upcoming.scss",
		"assets/scss/_variables.scss",
		"assets/scss/base/_base.scss",
		"assets/scss/base/_reset.scss",
		"assets/scss/base/_buttons.scss",
		"assets/scss/base/_forms.scss",
		"assets/scss/base/_lists.scss",
		"assets/scss/base/_tables.scss",
		"assets/scss/base/_typography.scss",
		"assets/scss/_layout.scss",
		"assets/scss/_syntax-highlighting.scss"
	],
	"sourcesContent": [
		"@charset \"utf-8\";\n@import \"main\";\n",
		"\r\n@import \"bourbon/bourbon\";\r\n\r\n@import \"variables\";\r\n@import \"base/base\";\r\n\r\n@import \"layout\";\r\n@import \"syntax-highlighting\";\r\n",
		"// Bourbon 4.2.7\r\n// http://bourbon.io\r\n// Copyright 2011-2015 thoughtbot, inc.\r\n// MIT License\r\n\r\n@import \"settings/prefixer\";\r\n@import \"settings/px-to-em\";\r\n@import \"settings/asset-pipeline\";\r\n\r\n@import \"functions/assign-inputs\";\r\n@import \"functions/contains\";\r\n@import \"functions/contains-falsy\";\r\n@import \"functions/is-length\";\r\n@import \"functions/is-light\";\r\n@import \"functions/is-number\";\r\n@import \"functions/is-size\";\r\n@import \"functions/px-to-em\";\r\n@import \"functions/px-to-rem\";\r\n@import \"functions/shade\";\r\n@import \"functions/strip-units\";\r\n@import \"functions/tint\";\r\n@import \"functions/transition-property-name\";\r\n@import \"functions/unpack\";\r\n@import \"functions/modular-scale\";\r\n\r\n@import \"helpers/convert-units\";\r\n@import \"helpers/directional-values\";\r\n@import \"helpers/font-source-declaration\";\r\n@import \"helpers/gradient-positions-parser\";\r\n@import \"helpers/linear-angle-parser\";\r\n@import \"helpers/linear-gradient-parser\";\r\n@import \"helpers/linear-positions-parser\";\r\n@import \"helpers/linear-side-corner-parser\";\r\n@import \"helpers/radial-arg-parser\";\r\n@import \"helpers/radial-positions-parser\";\r\n@import \"helpers/radial-gradient-parser\";\r\n@import \"helpers/render-gradients\";\r\n@import \"helpers/shape-size-stripper\";\r\n@import \"helpers/str-to-num\";\r\n\r\n@import \"css3/animation\";\r\n@import \"css3/appearance\";\r\n@import \"css3/backface-visibility\";\r\n@import \"css3/background\";\r\n@import \"css3/background-image\";\r\n@import \"css3/border-image\";\r\n@import \"css3/calc\";\r\n@import \"css3/columns\";\r\n@import \"css3/filter\";\r\n@import \"css3/flex-box\";\r\n@import \"css3/font-face\";\r\n@import \"css3/font-feature-settings\";\r\n@import \"css3/hidpi-media-query\";\r\n@import \"css3/hyphens\";\r\n@import \"css3/image-rendering\";\r\n@import \"css3/keyframes\";\r\n@import \"css3/linear-gradient\";\r\n@import \"css3/perspective\";\r\n@import \"css3/placeholder\";\r\n@import \"css3/radial-gradient\";\r\n@import \"css3/selection\";\r\n@import \"css3/text-decoration\";\r\n@import \"css3/transform\";\r\n@import \"css3/transition\";\r\n@import \"css3/user-select\";\r\n\r\n@import \"addons/border-color\";\r\n@import \"addons/border-radius\";\r\n@import \"addons/border-style\";\r\n@import \"addons/border-width\";\r\n@import \"addons/buttons\";\r\n@import \"addons/clearfix\";\r\n@import \"addons/ellipsis\";\r\n@import \"addons/font-stacks\";\r\n@import \"addons/hide-text\";\r\n@import \"addons/margin\";\r\n@import \"addons/padding\";\r\n@import \"addons/position\";\r\n@import \"addons/prefixer\";\r\n@import \"addons/retina-image\";\r\n@import \"addons/size\";\r\n@import \"addons/text-inputs\";\r\n@import \"addons/timing-functions\";\r\n@import \"addons/triangle\";\r\n@import \"addons/word-wrap\";\r\n\r\n@import \"bourbon-deprecated-upcoming\";\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Global variables to enable or disable vendor prefixes\r\n\r\n$prefix-for-webkit:    true !default;\r\n$prefix-for-mozilla:   true !default;\r\n$prefix-for-microsoft: true !default;\r\n$prefix-for-opera:     true !default;\r\n$prefix-for-spec:      true !default;\r\n",
		"$em-base: 16px !default;\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// A global setting to enable or disable the `$asset-pipeline` variable for all functions that accept it.\r\n///\r\n/// @type Bool\r\n\r\n$asset-pipeline: false !default;\r\n",
		"@function assign-inputs($inputs, $pseudo: null) {\r\n  $list: ();\r\n\r\n  @each $input in $inputs {\r\n    $input: unquote($input);\r\n    $input: if($pseudo, $input + \":\" + $pseudo, $input);\r\n    $list: append($list, $input, comma);\r\n  }\r\n\r\n  @return $list;\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Checks if a list contains a value(s).\r\n///\r\n/// @access private\r\n///\r\n/// @param {List} $list\r\n///   The list to check against.\r\n///\r\n/// @param {List} $values\r\n///   A single value or list of values to check for.\r\n///\r\n/// @example scss - Usage\r\n///   contains($list, $value)\r\n///\r\n/// @return {Bool}\r\n\r\n@function contains($list, $values...) {\r\n  @each $value in $values {\r\n    @if type-of(index($list, $value)) != \"number\" {\r\n      @return false;\r\n    }\r\n  }\r\n\r\n  @return true;\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Checks if a list does not contains a value.\r\n///\r\n/// @access private\r\n///\r\n/// @param {List} $list\r\n///   The list to check against.\r\n///\r\n/// @return {Bool}\r\n\r\n@function contains-falsy($list) {\r\n  @each $item in $list {\r\n    @if not $item {\r\n      @return true;\r\n    }\r\n  }\r\n\r\n  @return false;\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Checks for a valid CSS length.\r\n///\r\n/// @param {String} $value\r\n\r\n@function is-length($value) {\r\n  @return type-of($value) != \"null\" and (str-slice($value + \"\", 1, 4) == \"calc\"\r\n       or index(auto inherit initial 0, $value)\r\n       or (type-of($value) == \"number\" and not(unitless($value))));\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Programatically determines whether a color is light or dark.\r\n///\r\n/// @link http://robots.thoughtbot.com/closer-look-color-lightness\r\n///\r\n/// @param {Color (Hex)} $color\r\n///\r\n/// @example scss - Usage\r\n///   is-light($color)\r\n///\r\n/// @return {Bool}\r\n\r\n@function is-light($hex-color) {\r\n  $-local-red: red(rgba($hex-color, 1));\r\n  $-local-green: green(rgba($hex-color, 1));\r\n  $-local-blue: blue(rgba($hex-color, 1));\r\n  $-local-lightness: ($-local-red * 0.2126 + $-local-green * 0.7152 + $-local-blue * 0.0722) / 255;\r\n\r\n  @return $-local-lightness > 0.6;\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Checks for a valid number.\r\n///\r\n/// @param {Number} $value\r\n///\r\n/// @require {function} contains\r\n\r\n@function is-number($value) {\r\n  @return contains(\"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\" 0 1 2 3 4 5 6 7 8 9, $value);\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Checks for a valid CSS size.\r\n///\r\n/// @param {String} $value\r\n///\r\n/// @require {function} contains\r\n/// @require {function} is-length\r\n\r\n@function is-size($value) {\r\n  @return is-length($value)\r\n          or contains(\"fill\" \"fit-content\" \"min-content\" \"max-content\", $value);\r\n}\r\n",
		"// Convert pixels to ems\r\n// eg. for a relational value of 12px write em(12) when the parent is 16px\r\n// if the parent is another value say 24px write em(12, 24)\r\n\r\n@function em($pxval, $base: $em-base) {\r\n  @if not unitless($pxval) {\r\n    $pxval: strip-units($pxval);\r\n  }\r\n  @if not unitless($base) {\r\n    $base: strip-units($base);\r\n  }\r\n  @return ($pxval / $base) * 1em;\r\n}\r\n",
		"// Convert pixels to rems\r\n// eg. for a relational value of 12px write rem(12)\r\n// Assumes $em-base is the font-size of <html>\r\n\r\n@function rem($pxval) {\r\n  @if not unitless($pxval) {\r\n    $pxval: strip-units($pxval);\r\n  }\r\n\r\n  $base: $em-base;\r\n  @if not unitless($base) {\r\n    $base: strip-units($base);\r\n  }\r\n  @return ($pxval / $base) * 1rem;\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Mixes a color with black.\r\n///\r\n/// @param {Color} $color\r\n///\r\n/// @param {Number (Percentage)} $percent\r\n///   The amount of black to be mixed in.\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     background-color: shade(#ffbb52, 60%);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     background-color: #664a20;\r\n///   }\r\n///\r\n/// @return {Color}\r\n\r\n@function shade($color, $percent) {\r\n  @return mix(#000, $color, $percent);\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Strips the unit from a number.\r\n///\r\n/// @param {Number (With Unit)} $value\r\n///\r\n/// @example scss - Usage\r\n///   $dimension: strip-units(10em);\r\n///\r\n/// @example css - CSS Output\r\n///   $dimension: 10;\r\n///\r\n/// @return {Number (Unitless)}\r\n\r\n@function strip-units($value) {\r\n  @return ($value / ($value * 0 + 1));\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Mixes a color with white.\r\n///\r\n/// @param {Color} $color\r\n///\r\n/// @param {Number (Percentage)} $percent\r\n///   The amount of white to be mixed in.\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     background-color: tint(#6ecaa6, 40%);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     background-color: #a8dfc9;\r\n///   }\r\n///\r\n/// @return {Color}\r\n\r\n@function tint($color, $percent) {\r\n  @return mix(#fff, $color, $percent);\r\n}\r\n",
		"// Return vendor-prefixed property names if appropriate\r\n// Example: transition-property-names((transform, color, background), moz) -> -moz-transform, color, background\r\n//************************************************************************//\r\n@function transition-property-names($props, $vendor: false) {\r\n  $new-props: ();\r\n\r\n  @each $prop in $props {\r\n    $new-props: append($new-props, transition-property-name($prop, $vendor), comma);\r\n  }\r\n\r\n  @return $new-props;\r\n}\r\n\r\n@function transition-property-name($prop, $vendor: false) {\r\n  // put other properties that need to be prefixed here aswell\r\n  @if $vendor and $prop == transform {\r\n    @return unquote('-'+$vendor+'-'+$prop);\r\n  }\r\n  @else {\r\n    @return $prop;\r\n  }\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Converts shorthand to the 4-value syntax.\r\n///\r\n/// @param {List} $shorthand\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     margin: unpack(1em 2em);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     margin: 1em 2em 1em 2em;\r\n///   }\r\n\r\n@function unpack($shorthand) {\r\n  @if length($shorthand) == 1 {\r\n    @return nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1);\r\n  } @else if length($shorthand) == 2 {\r\n    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 1) nth($shorthand, 2);\r\n  } @else if length($shorthand) == 3 {\r\n    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 3) nth($shorthand, 2);\r\n  } @else {\r\n    @return $shorthand;\r\n  }\r\n}\r\n",
		"// Scaling Variables\r\n$golden:           1.618;\r\n$minor-second:     1.067;\r\n$major-second:     1.125;\r\n$minor-third:      1.2;\r\n$major-third:      1.25;\r\n$perfect-fourth:   1.333;\r\n$augmented-fourth: 1.414;\r\n$perfect-fifth:    1.5;\r\n$minor-sixth:      1.6;\r\n$major-sixth:      1.667;\r\n$minor-seventh:    1.778;\r\n$major-seventh:    1.875;\r\n$octave:           2;\r\n$major-tenth:      2.5;\r\n$major-eleventh:   2.667;\r\n$major-twelfth:    3;\r\n$double-octave:    4;\r\n\r\n$modular-scale-ratio: $perfect-fourth !default;\r\n$modular-scale-base: em($em-base) !default;\r\n\r\n@function modular-scale($increment, $value: $modular-scale-base, $ratio: $modular-scale-ratio) {\r\n  $v1: nth($value, 1);\r\n  $v2: nth($value, length($value));\r\n  $value: $v1;\r\n\r\n  // scale $v2 to just above $v1\r\n  @while $v2 > $v1 {\r\n    $v2: ($v2 / $ratio); // will be off-by-1\r\n  }\r\n  @while $v2 < $v1 {\r\n    $v2: ($v2 * $ratio); // will fix off-by-1\r\n  }\r\n\r\n  // check AFTER scaling $v2 to prevent double-counting corner-case\r\n  $double-stranded: $v2 > $v1;\r\n\r\n  @if $increment > 0 {\r\n    @for $i from 1 through $increment {\r\n      @if $double-stranded and ($v1 * $ratio) > $v2 {\r\n        $value: $v2;\r\n        $v2: ($v2 * $ratio);\r\n      } @else {\r\n        $v1: ($v1 * $ratio);\r\n        $value: $v1;\r\n      }\r\n    }\r\n  }\r\n\r\n  @if $increment < 0 {\r\n    // adjust $v2 to just below $v1\r\n    @if $double-stranded {\r\n      $v2: ($v2 / $ratio);\r\n    }\r\n\r\n    @for $i from $increment through -1 {\r\n      @if $double-stranded and ($v1 / $ratio) < $v2 {\r\n        $value: $v2;\r\n        $v2: ($v2 / $ratio);\r\n      } @else {\r\n        $v1: ($v1 / $ratio);\r\n        $value: $v1;\r\n      }\r\n    }\r\n  }\r\n\r\n  @return $value;\r\n}\r\n",
		"//************************************************************************//\r\n// Helper function for str-to-num fn.\r\n// Source: http://sassmeister.com/gist/9647408\r\n//************************************************************************//\r\n@function _convert-units($number, $unit) {\r\n  $strings: \"px\", \"cm\", \"mm\", \"%\", \"ch\", \"pica\", \"in\", \"em\", \"rem\", \"pt\", \"pc\", \"ex\", \"vw\", \"vh\", \"vmin\", \"vmax\", \"deg\", \"rad\", \"grad\", \"turn\";\r\n  $units:   1px, 1cm, 1mm, 1%, 1ch, 1pica, 1in, 1em, 1rem, 1pt, 1pc, 1ex, 1vw, 1vh, 1vmin, 1vmax, 1deg, 1rad, 1grad, 1turn;\r\n  $index: index($strings, $unit);\r\n\r\n  @if not $index {\r\n    @warn \"Unknown unit `#{$unit}`.\";\r\n    @return false;\r\n  }\r\n\r\n  @if type-of($number) != \"number\" {\r\n    @warn \"`#{$number} is not a number`\";\r\n    @return false;\r\n  }\r\n\r\n  @return $number * nth($units, $index);\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Directional-property mixins are shorthands for writing properties like the following\r\n///\r\n/// @ignore You can also use `false` instead of `null`.\r\n///\r\n/// @param {List} $vals\r\n///   List of directional values\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include border-style(dotted null);\r\n///     @include margin(null 0 10px);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     border-bottom-style: dotted;\r\n///     border-top-style: dotted;\r\n///     margin-bottom: 10px;\r\n///     margin-left: 0;\r\n///     margin-right: 0;\r\n///   }\r\n///\r\n/// @require {function} contains-falsy\r\n///\r\n/// @return {List}\r\n\r\n@function collapse-directionals($vals) {\r\n  $output: null;\r\n\r\n  $a: nth($vals, 1);\r\n  $b: if(length($vals) < 2, $a, nth($vals, 2));\r\n  $c: if(length($vals) < 3, $a, nth($vals, 3));\r\n  $d: if(length($vals) < 2, $a, nth($vals, if(length($vals) < 4, 2, 4)));\r\n\r\n  @if $a == 0 { $a: 0; }\r\n  @if $b == 0 { $b: 0; }\r\n  @if $c == 0 { $c: 0; }\r\n  @if $d == 0 { $d: 0; }\r\n\r\n  @if $a == $b and $a == $c and $a == $d { $output: $a;          }\r\n  @else if $a == $c and $b == $d         { $output: $a $b;       }\r\n  @else if $b == $d                      { $output: $a $b $c;    }\r\n  @else                                  { $output: $a $b $c $d; }\r\n\r\n  @return $output;\r\n}\r\n\r\n/// Output directional properties, for instance `margin`.\r\n///\r\n/// @access private\r\n///\r\n/// @param {String} $pre\r\n///   Prefix to use\r\n/// @param {String} $suf\r\n///   Suffix to use\r\n/// @param {List} $vals\r\n///   List of values\r\n///\r\n/// @require {function} collapse-directionals\r\n/// @require {function} contains-falsy\r\n\r\n@mixin directional-property($pre, $suf, $vals) {\r\n  // Property Names\r\n  $top:    $pre + \"-top\"    + if($suf, \"-#{$suf}\", \"\");\r\n  $bottom: $pre + \"-bottom\" + if($suf, \"-#{$suf}\", \"\");\r\n  $left:   $pre + \"-left\"   + if($suf, \"-#{$suf}\", \"\");\r\n  $right:  $pre + \"-right\"  + if($suf, \"-#{$suf}\", \"\");\r\n  $all:    $pre +             if($suf, \"-#{$suf}\", \"\");\r\n\r\n  $vals: collapse-directionals($vals);\r\n\r\n  @if contains-falsy($vals) {\r\n    @if nth($vals, 1) { #{$top}: nth($vals, 1); }\r\n\r\n    @if length($vals) == 1 {\r\n      @if nth($vals, 1) { #{$right}: nth($vals, 1); }\r\n    } @else {\r\n      @if nth($vals, 2) { #{$right}: nth($vals, 2); }\r\n    }\r\n\r\n    @if length($vals) == 2 {\r\n      @if nth($vals, 1) { #{$bottom}: nth($vals, 1); }\r\n      @if nth($vals, 2) { #{$left}:   nth($vals, 2); }\r\n    } @else if length($vals) == 3 {\r\n      @if nth($vals, 3) { #{$bottom}: nth($vals, 3); }\r\n      @if nth($vals, 2) { #{$left}:   nth($vals, 2); }\r\n    } @else if length($vals) == 4 {\r\n      @if nth($vals, 3) { #{$bottom}: nth($vals, 3); }\r\n      @if nth($vals, 4) { #{$left}:   nth($vals, 4); }\r\n    }\r\n  } @else {\r\n    #{$all}: $vals;\r\n  }\r\n}\r\n",
		"// Used for creating the source string for fonts using @font-face\r\n// Reference: http://goo.gl/Ru1bKP\r\n\r\n@function font-url-prefixer($asset-pipeline) {\r\n  @if $asset-pipeline == true {\r\n    @return font-url;\r\n  } @else {\r\n    @return url;\r\n  }\r\n}\r\n\r\n@function font-source-declaration(\r\n  $font-family,\r\n  $file-path,\r\n  $asset-pipeline,\r\n  $file-formats,\r\n  $font-url) {\r\n\r\n  $src: ();\r\n\r\n  $formats-map: (\r\n    eot:   \"#{$file-path}.eot?#iefix\" format(\"embedded-opentype\"),\r\n    woff2: \"#{$file-path}.woff2\" format(\"woff2\"),\r\n    woff:  \"#{$file-path}.woff\" format(\"woff\"),\r\n    ttf:   \"#{$file-path}.ttf\" format(\"truetype\"),\r\n    svg:   \"#{$file-path}.svg##{$font-family}\" format(\"svg\")\r\n  );\r\n\r\n  @each $key, $values in $formats-map {\r\n    @if contains($file-formats, $key) {\r\n      $file-path: nth($values, 1);\r\n      $font-format: nth($values, 2);\r\n\r\n      @if $asset-pipeline == true {\r\n        $src: append($src, font-url($file-path) $font-format, comma);\r\n      } @else {\r\n        $src: append($src, url($file-path) $font-format, comma);\r\n      }\r\n    }\r\n  }\r\n\r\n  @return $src;\r\n}\r\n",
		"@function _gradient-positions-parser($gradient-type, $gradient-positions) {\r\n  @if $gradient-positions\r\n  and ($gradient-type == linear)\r\n  and (type-of($gradient-positions) != color) {\r\n    $gradient-positions: _linear-positions-parser($gradient-positions);\r\n  }\r\n  @else if $gradient-positions\r\n  and ($gradient-type == radial)\r\n  and (type-of($gradient-positions) != color) {\r\n    $gradient-positions: _radial-positions-parser($gradient-positions);\r\n  }\r\n  @return $gradient-positions;\r\n}\r\n",
		"// Private function for linear-gradient-parser\r\n@function _linear-angle-parser($image, $first-val, $prefix, $suffix) {\r\n  $offset: null;\r\n  $unit-short:  str-slice($first-val, str-length($first-val) - 2, str-length($first-val));\r\n  $unit-long:   str-slice($first-val, str-length($first-val) - 3, str-length($first-val));\r\n\r\n  @if ($unit-long == \"grad\") or\r\n      ($unit-long == \"turn\") {\r\n    $offset: if($unit-long == \"grad\", -100grad * 3, -0.75turn);\r\n  }\r\n\r\n  @else if ($unit-short == \"deg\") or\r\n           ($unit-short == \"rad\") {\r\n    $offset: if($unit-short == \"deg\", -90 * 3, 1.6rad);\r\n  }\r\n\r\n  @if $offset {\r\n    $num: _str-to-num($first-val);\r\n\r\n    @return (\r\n      webkit-image: -webkit- + $prefix + ($offset - $num) + $suffix,\r\n      spec-image: $image\r\n    );\r\n  }\r\n}\r\n",
		"@function _linear-gradient-parser($image) {\r\n  $image: unquote($image);\r\n  $gradients: ();\r\n  $start: str-index($image, \"(\");\r\n  $end: str-index($image, \",\");\r\n  $first-val: str-slice($image, $start + 1, $end - 1);\r\n\r\n  $prefix: str-slice($image, 1, $start);\r\n  $suffix: str-slice($image, $end, str-length($image));\r\n\r\n  $has-multiple-vals: str-index($first-val, \" \");\r\n  $has-single-position: unquote(_position-flipper($first-val) + \"\");\r\n  $has-angle: is-number(str-slice($first-val, 1, 1));\r\n\r\n  @if $has-multiple-vals {\r\n    $gradients: _linear-side-corner-parser($image, $first-val, $prefix, $suffix, $has-multiple-vals);\r\n  }\r\n\r\n  @else if $has-single-position != \"\" {\r\n    $pos: unquote($has-single-position + \"\");\r\n\r\n    $gradients: (\r\n      webkit-image: -webkit- + $image,\r\n      spec-image: $prefix + \"to \" + $pos + $suffix\r\n    );\r\n  }\r\n\r\n  @else if $has-angle {\r\n    // Rotate degree for webkit\r\n    $gradients: _linear-angle-parser($image, $first-val, $prefix, $suffix);\r\n  }\r\n\r\n  @else {\r\n    $gradients: (\r\n      webkit-image: -webkit- + $image,\r\n      spec-image: $image\r\n    );\r\n  }\r\n\r\n  @return $gradients;\r\n}\r\n",
		"@function _linear-positions-parser($pos) {\r\n  $type: type-of(nth($pos, 1));\r\n  $spec: null;\r\n  $degree: null;\r\n  $side: null;\r\n  $corner: null;\r\n  $length: length($pos);\r\n  // Parse Side and corner positions\r\n  @if ($length > 1) {\r\n    @if nth($pos, 1) == \"to\" { // Newer syntax\r\n      $side: nth($pos, 2);\r\n\r\n      @if $length == 2 { // eg. to top\r\n        // Swap for backwards compatibility\r\n        $degree: _position-flipper(nth($pos, 2));\r\n      }\r\n      @else if $length == 3 { // eg. to top left\r\n        $corner: nth($pos, 3);\r\n      }\r\n    }\r\n    @else if $length == 2 { // Older syntax (\"top left\")\r\n      $side: _position-flipper(nth($pos, 1));\r\n      $corner: _position-flipper(nth($pos, 2));\r\n    }\r\n\r\n    @if (\"#{$side} #{$corner}\" == \"left top\") or (\"#{$side} #{$corner}\" == \"top left\") {\r\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\r\n    }\r\n    @else if (\"#{$side} #{$corner}\" == \"right top\") or (\"#{$side} #{$corner}\" == \"top right\") {\r\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\r\n    }\r\n    @else if (\"#{$side} #{$corner}\" == \"right bottom\") or (\"#{$side} #{$corner}\" == \"bottom right\") {\r\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\r\n    }\r\n    @else if (\"#{$side} #{$corner}\" == \"left bottom\") or (\"#{$side} #{$corner}\" == \"bottom left\") {\r\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\r\n    }\r\n    $spec: to $side $corner;\r\n  }\r\n  @else if $length == 1 {\r\n    // Swap for backwards compatibility\r\n    @if $type == string {\r\n      $degree: $pos;\r\n      $spec: to _position-flipper($pos);\r\n    }\r\n    @else {\r\n      $degree: -270 - $pos; //rotate the gradient opposite from spec\r\n      $spec: $pos;\r\n    }\r\n  }\r\n  $degree: unquote($degree + \",\");\r\n  $spec:   unquote($spec + \",\");\r\n  @return $degree $spec;\r\n}\r\n\r\n@function _position-flipper($pos) {\r\n  @return if($pos == left, right, null)\r\n         if($pos == right, left, null)\r\n         if($pos == top, bottom, null)\r\n         if($pos == bottom, top, null);\r\n}\r\n",
		"// Private function for linear-gradient-parser\r\n@function _linear-side-corner-parser($image, $first-val, $prefix, $suffix, $has-multiple-vals) {\r\n  $val-1: str-slice($first-val, 1, $has-multiple-vals - 1);\r\n  $val-2: str-slice($first-val, $has-multiple-vals + 1, str-length($first-val));\r\n  $val-3: null;\r\n  $has-val-3: str-index($val-2, \" \");\r\n\r\n  @if $has-val-3 {\r\n    $val-3: str-slice($val-2, $has-val-3 + 1, str-length($val-2));\r\n    $val-2: str-slice($val-2, 1, $has-val-3 - 1);\r\n  }\r\n\r\n  $pos: _position-flipper($val-1) _position-flipper($val-2) _position-flipper($val-3);\r\n  $pos: unquote($pos + \"\");\r\n\r\n  // Use old spec for webkit\r\n  @if $val-1 == \"to\" {\r\n    @return (\r\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\r\n      spec-image: $image\r\n    );\r\n  }\r\n\r\n  // Bring the code up to spec\r\n  @else {\r\n    @return (\r\n      webkit-image: -webkit- + $image,\r\n      spec-image: $prefix + \"to \" + $pos + $suffix\r\n    );\r\n  }\r\n}\r\n",
		"@function _radial-arg-parser($g1, $g2, $pos, $shape-size) {\r\n  @each $value in $g1, $g2 {\r\n    $first-val: nth($value, 1);\r\n    $pos-type:  type-of($first-val);\r\n    $spec-at-index: null;\r\n\r\n    // Determine if spec was passed to mixin\r\n    @if type-of($value) == list {\r\n      $spec-at-index: if(index($value, at), index($value, at), false);\r\n    }\r\n    @if $spec-at-index {\r\n      @if $spec-at-index > 1 {\r\n        @for $i from 1 through ($spec-at-index - 1) {\r\n          $shape-size: $shape-size nth($value, $i);\r\n        }\r\n        @for $i from ($spec-at-index + 1) through length($value) {\r\n          $pos: $pos nth($value, $i);\r\n        }\r\n      }\r\n      @else if $spec-at-index == 1 {\r\n        @for $i from ($spec-at-index + 1) through length($value) {\r\n          $pos: $pos nth($value, $i);\r\n        }\r\n      }\r\n      $g1: null;\r\n    }\r\n\r\n    // If not spec calculate correct values\r\n    @else {\r\n      @if ($pos-type != color) or ($first-val != \"transparent\") {\r\n        @if ($pos-type == number)\r\n        or ($first-val == \"center\")\r\n        or ($first-val == \"top\")\r\n        or ($first-val == \"right\")\r\n        or ($first-val == \"bottom\")\r\n        or ($first-val == \"left\") {\r\n\r\n          $pos: $value;\r\n\r\n          @if $pos == $g1 {\r\n            $g1: null;\r\n          }\r\n        }\r\n\r\n        @else if\r\n           ($first-val == \"ellipse\")\r\n        or ($first-val == \"circle\")\r\n        or ($first-val == \"closest-side\")\r\n        or ($first-val == \"closest-corner\")\r\n        or ($first-val == \"farthest-side\")\r\n        or ($first-val == \"farthest-corner\")\r\n        or ($first-val == \"contain\")\r\n        or ($first-val == \"cover\") {\r\n\r\n          $shape-size: $value;\r\n\r\n          @if $value == $g1 {\r\n            $g1: null;\r\n          }\r\n\r\n          @else if $value == $g2 {\r\n            $g2: null;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  @return $g1, $g2, $pos, $shape-size;\r\n}\r\n",
		"@function _radial-positions-parser($gradient-pos) {\r\n  $shape-size: nth($gradient-pos, 1);\r\n  $pos:        nth($gradient-pos, 2);\r\n  $shape-size-spec: _shape-size-stripper($shape-size);\r\n\r\n  $pre-spec: unquote(if($pos, \"#{$pos}, \", null))\r\n             unquote(if($shape-size, \"#{$shape-size},\", null));\r\n  $pos-spec: if($pos, \"at #{$pos}\", null);\r\n\r\n  $spec: \"#{$shape-size-spec} #{$pos-spec}\";\r\n\r\n  // Add comma\r\n  @if ($spec != \"  \") {\r\n    $spec: \"#{$spec},\";\r\n  }\r\n\r\n  @return $pre-spec $spec;\r\n}\r\n",
		"@function _radial-gradient-parser($image) {\r\n  $image: unquote($image);\r\n  $gradients: ();\r\n  $start: str-index($image, \"(\");\r\n  $end: str-index($image, \",\");\r\n  $first-val: str-slice($image, $start + 1, $end - 1);\r\n\r\n  $prefix: str-slice($image, 1, $start);\r\n  $suffix: str-slice($image, $end, str-length($image));\r\n\r\n  $is-spec-syntax: str-index($first-val, \"at\");\r\n\r\n  @if $is-spec-syntax and $is-spec-syntax > 1 {\r\n    $keyword: str-slice($first-val, 1, $is-spec-syntax - 2);\r\n    $pos: str-slice($first-val, $is-spec-syntax + 3, str-length($first-val));\r\n    $pos: append($pos, $keyword, comma);\r\n\r\n    $gradients: (\r\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\r\n      spec-image: $image\r\n    );\r\n  }\r\n\r\n  @else if $is-spec-syntax == 1 {\r\n    $pos: str-slice($first-val, $is-spec-syntax + 3, str-length($first-val));\r\n\r\n    $gradients: (\r\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\r\n      spec-image: $image\r\n    );\r\n  }\r\n\r\n  @else if str-index($image, \"cover\") or str-index($image, \"contain\") {\r\n    @warn \"Radial-gradient needs to be updated to conform to latest spec.\";\r\n\r\n    $gradients: (\r\n      webkit-image: null,\r\n      spec-image: $image\r\n    );\r\n  }\r\n\r\n  @else {\r\n    $gradients: (\r\n      webkit-image: -webkit- + $image,\r\n      spec-image: $image\r\n    );\r\n  }\r\n\r\n  @return $gradients;\r\n}\r\n",
		"// User for linear and radial gradients within background-image or border-image properties\r\n\r\n@function _render-gradients($gradient-positions, $gradients, $gradient-type, $vendor: false) {\r\n  $pre-spec: null;\r\n  $spec: null;\r\n  $vendor-gradients: null;\r\n  @if $gradient-type == linear {\r\n    @if $gradient-positions {\r\n      $pre-spec: nth($gradient-positions, 1);\r\n      $spec:     nth($gradient-positions, 2);\r\n    }\r\n  }\r\n  @else if $gradient-type == radial {\r\n    $pre-spec: nth($gradient-positions, 1);\r\n    $spec:     nth($gradient-positions, 2);\r\n  }\r\n\r\n  @if $vendor {\r\n    $vendor-gradients: -#{$vendor}-#{$gradient-type}-gradient(#{$pre-spec} $gradients);\r\n  }\r\n  @else if $vendor == false {\r\n    $vendor-gradients: \"#{$gradient-type}-gradient(#{$spec} #{$gradients})\";\r\n    $vendor-gradients: unquote($vendor-gradients);\r\n  }\r\n  @return $vendor-gradients;\r\n}\r\n",
		"@function _shape-size-stripper($shape-size) {\r\n  $shape-size-spec: null;\r\n  @each $value in $shape-size {\r\n    @if ($value == \"cover\") or ($value == \"contain\") {\r\n      $value: null;\r\n    }\r\n    $shape-size-spec: \"#{$shape-size-spec} #{$value}\";\r\n  }\r\n  @return $shape-size-spec;\r\n}\r\n",
		"//************************************************************************//\r\n// Helper function for linear/radial-gradient-parsers.\r\n// Source: http://sassmeister.com/gist/9647408\r\n//************************************************************************//\r\n@function _str-to-num($string) {\r\n  // Matrices\r\n  $strings: \"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\";\r\n  $numbers:  0   1   2   3   4   5   6   7   8   9;\r\n\r\n  // Result\r\n  $result: 0;\r\n  $divider: 0;\r\n  $minus: false;\r\n\r\n  // Looping through all characters\r\n  @for $i from 1 through str-length($string) {\r\n    $character: str-slice($string, $i, $i);\r\n    $index: index($strings, $character);\r\n\r\n    @if $character == \"-\" {\r\n      $minus: true;\r\n    }\r\n\r\n    @else if $character == \".\" {\r\n      $divider: 1;\r\n    }\r\n\r\n    @else {\r\n      @if not $index {\r\n        $result: if($minus, $result * -1, $result);\r\n        @return _convert-units($result, str-slice($string, $i));\r\n      }\r\n\r\n      $number: nth($numbers, $index);\r\n\r\n      @if $divider == 0 {\r\n        $result: $result * 10;\r\n      }\r\n\r\n      @else {\r\n        // Move the decimal dot to the left\r\n        $divider: $divider * 10;\r\n        $number: $number / $divider;\r\n      }\r\n\r\n      $result: $result + $number;\r\n    }\r\n  }\r\n  @return if($minus, $result * -1, $result);\r\n}\r\n",
		"// http://www.w3.org/TR/css3-animations/#the-animation-name-property-\r\n// Each of these mixins support comma separated lists of values, which allows different transitions for individual properties to be described in a single style rule. Each value in the list corresponds to the value at that same position in the other properties.\r\n\r\n@mixin animation($animations...) {\r\n  @include prefixer(animation, $animations, webkit moz spec);\r\n}\r\n\r\n@mixin animation-name($names...) {\r\n  @include prefixer(animation-name, $names, webkit moz spec);\r\n}\r\n\r\n@mixin animation-duration($times...) {\r\n  @include prefixer(animation-duration, $times, webkit moz spec);\r\n}\r\n\r\n@mixin animation-timing-function($motions...) {\r\n  // ease | linear | ease-in | ease-out | ease-in-out\r\n  @include prefixer(animation-timing-function, $motions, webkit moz spec);\r\n}\r\n\r\n@mixin animation-iteration-count($values...) {\r\n  // infinite | <number>\r\n  @include prefixer(animation-iteration-count, $values, webkit moz spec);\r\n}\r\n\r\n@mixin animation-direction($directions...) {\r\n  // normal | alternate\r\n  @include prefixer(animation-direction, $directions, webkit moz spec);\r\n}\r\n\r\n@mixin animation-play-state($states...) {\r\n  // running | paused\r\n  @include prefixer(animation-play-state, $states, webkit moz spec);\r\n}\r\n\r\n@mixin animation-delay($times...) {\r\n  @include prefixer(animation-delay, $times, webkit moz spec);\r\n}\r\n\r\n@mixin animation-fill-mode($modes...) {\r\n  // none | forwards | backwards | both\r\n  @include prefixer(animation-fill-mode, $modes, webkit moz spec);\r\n}\r\n",
		"@mixin appearance($value) {\r\n  @include prefixer(appearance, $value, webkit moz ms o spec);\r\n}\r\n",
		"@mixin backface-visibility($visibility) {\r\n  @include prefixer(backface-visibility, $visibility, webkit spec);\r\n}\r\n",
		"//************************************************************************//\r\n// Background property for adding multiple backgrounds using shorthand\r\n// notation.\r\n//************************************************************************//\r\n\r\n@mixin background($backgrounds...) {\r\n  $webkit-backgrounds: ();\r\n  $spec-backgrounds: ();\r\n\r\n  @each $background in $backgrounds {\r\n    $webkit-background: ();\r\n    $spec-background: ();\r\n    $background-type: type-of($background);\r\n\r\n    @if $background-type == string or $background-type == list {\r\n      $background-str: if($background-type == list, nth($background, 1), $background);\r\n\r\n      $url-str:       str-slice($background-str, 1, 3);\r\n      $gradient-type: str-slice($background-str, 1, 6);\r\n\r\n      @if $url-str == \"url\" {\r\n        $webkit-background: $background;\r\n        $spec-background:   $background;\r\n      }\r\n\r\n      @else if $gradient-type == \"linear\" {\r\n        $gradients: _linear-gradient-parser(\"#{$background}\");\r\n        $webkit-background: map-get($gradients, webkit-image);\r\n        $spec-background:   map-get($gradients, spec-image);\r\n      }\r\n\r\n      @else if $gradient-type == \"radial\" {\r\n        $gradients: _radial-gradient-parser(\"#{$background}\");\r\n        $webkit-background: map-get($gradients, webkit-image);\r\n        $spec-background:   map-get($gradients, spec-image);\r\n      }\r\n\r\n      @else {\r\n        $webkit-background: $background;\r\n        $spec-background:   $background;\r\n      }\r\n    }\r\n\r\n    @else {\r\n      $webkit-background: $background;\r\n      $spec-background:   $background;\r\n    }\r\n\r\n    $webkit-backgrounds: append($webkit-backgrounds, $webkit-background, comma);\r\n    $spec-backgrounds:   append($spec-backgrounds,   $spec-background,   comma);\r\n  }\r\n\r\n  background: $webkit-backgrounds;\r\n  background: $spec-backgrounds;\r\n}\r\n",
		"//************************************************************************//\r\n// Background-image property for adding multiple background images with\r\n// gradients, or for stringing multiple gradients together.\r\n//************************************************************************//\r\n\r\n@mixin background-image($images...) {\r\n  $webkit-images: ();\r\n  $spec-images: ();\r\n\r\n  @each $image in $images {\r\n    $webkit-image: ();\r\n    $spec-image: ();\r\n\r\n    @if (type-of($image) == string) {\r\n      $url-str:       str-slice($image, 1, 3);\r\n      $gradient-type: str-slice($image, 1, 6);\r\n\r\n      @if $url-str == \"url\" {\r\n        $webkit-image: $image;\r\n        $spec-image:   $image;\r\n      }\r\n\r\n      @else if $gradient-type == \"linear\" {\r\n        $gradients: _linear-gradient-parser($image);\r\n        $webkit-image:  map-get($gradients, webkit-image);\r\n        $spec-image:    map-get($gradients, spec-image);\r\n      }\r\n\r\n      @else if $gradient-type == \"radial\" {\r\n        $gradients: _radial-gradient-parser($image);\r\n        $webkit-image: map-get($gradients, webkit-image);\r\n        $spec-image:   map-get($gradients, spec-image);\r\n      }\r\n    }\r\n\r\n    $webkit-images: append($webkit-images, $webkit-image, comma);\r\n    $spec-images:   append($spec-images,   $spec-image,   comma);\r\n  }\r\n\r\n  background-image: $webkit-images;\r\n  background-image: $spec-images;\r\n}\r\n",
		"@mixin border-image($borders...) {\r\n  $webkit-borders: ();\r\n  $spec-borders: ();\r\n\r\n  @each $border in $borders {\r\n    $webkit-border: ();\r\n    $spec-border: ();\r\n    $border-type: type-of($border);\r\n\r\n    @if $border-type == string or list {\r\n      $border-str: if($border-type == list, nth($border, 1), $border);\r\n\r\n      $url-str:       str-slice($border-str, 1, 3);\r\n      $gradient-type: str-slice($border-str, 1, 6);\r\n\r\n      @if $url-str == \"url\" {\r\n        $webkit-border: $border;\r\n        $spec-border:   $border;\r\n      }\r\n\r\n      @else if $gradient-type == \"linear\" {\r\n        $gradients: _linear-gradient-parser(\"#{$border}\");\r\n        $webkit-border: map-get($gradients, webkit-image);\r\n        $spec-border:   map-get($gradients, spec-image);\r\n      }\r\n\r\n      @else if $gradient-type == \"radial\" {\r\n        $gradients: _radial-gradient-parser(\"#{$border}\");\r\n        $webkit-border: map-get($gradients, webkit-image);\r\n        $spec-border:   map-get($gradients, spec-image);\r\n      }\r\n\r\n      @else {\r\n        $webkit-border: $border;\r\n        $spec-border:   $border;\r\n      }\r\n    }\r\n\r\n    @else {\r\n      $webkit-border: $border;\r\n      $spec-border:   $border;\r\n    }\r\n\r\n    $webkit-borders: append($webkit-borders, $webkit-border, comma);\r\n    $spec-borders:   append($spec-borders,   $spec-border,   comma);\r\n  }\r\n\r\n  -webkit-border-image: $webkit-borders;\r\n          border-image: $spec-borders;\r\n          border-style: solid;\r\n}\r\n\r\n//Examples:\r\n// @include border-image(url(\"image.png\"));\r\n// @include border-image(url(\"image.png\") 20 stretch);\r\n// @include border-image(linear-gradient(45deg, orange, yellow));\r\n// @include border-image(linear-gradient(45deg, orange, yellow) stretch);\r\n// @include border-image(linear-gradient(45deg, orange, yellow) 20 30 40 50 stretch round);\r\n// @include border-image(radial-gradient(top, cover, orange, yellow, orange));\r\n",
		"@mixin calc($property, $value) {\r\n  #{$property}: -webkit-calc(#{$value});\r\n  #{$property}: calc(#{$value});\r\n}\r\n",
		"@mixin columns($arg: auto) {\r\n  // <column-count> || <column-width>\r\n  @include prefixer(columns, $arg, webkit moz spec);\r\n}\r\n\r\n@mixin column-count($int: auto) {\r\n  // auto || integer\r\n  @include prefixer(column-count, $int, webkit moz spec);\r\n}\r\n\r\n@mixin column-gap($length: normal) {\r\n  // normal || length\r\n  @include prefixer(column-gap, $length, webkit moz spec);\r\n}\r\n\r\n@mixin column-fill($arg: auto) {\r\n  // auto || length\r\n  @include prefixer(column-fill, $arg, webkit moz spec);\r\n}\r\n\r\n@mixin column-rule($arg) {\r\n  // <border-width> || <border-style> || <color>\r\n  @include prefixer(column-rule, $arg, webkit moz spec);\r\n}\r\n\r\n@mixin column-rule-color($color) {\r\n  @include prefixer(column-rule-color, $color, webkit moz spec);\r\n}\r\n\r\n@mixin column-rule-style($style: none) {\r\n  // none | hidden | dashed | dotted | double | groove | inset | inset | outset | ridge | solid\r\n  @include prefixer(column-rule-style, $style, webkit moz spec);\r\n}\r\n\r\n@mixin column-rule-width ($width: none) {\r\n  @include prefixer(column-rule-width, $width, webkit moz spec);\r\n}\r\n\r\n@mixin column-span($arg: none) {\r\n  // none || all\r\n  @include prefixer(column-span, $arg, webkit moz spec);\r\n}\r\n\r\n@mixin column-width($length: auto) {\r\n  // auto || length\r\n  @include prefixer(column-width, $length, webkit moz spec);\r\n}\r\n",
		"@mixin filter($function: none) {\r\n  // <filter-function> [<filter-function]* | none\r\n  @include prefixer(filter, $function, webkit spec);\r\n}\r\n",
		"// CSS3 Flexible Box Model and property defaults\r\n\r\n// Custom shorthand notation for flexbox\r\n@mixin box($orient: inline-axis, $pack: start, $align: stretch) {\r\n  @include display-box;\r\n  @include box-orient($orient);\r\n  @include box-pack($pack);\r\n  @include box-align($align);\r\n}\r\n\r\n@mixin display-box {\r\n  display: -webkit-box;\r\n  display: -moz-box;\r\n  display: -ms-flexbox; // IE 10\r\n  display: box;\r\n}\r\n\r\n@mixin box-orient($orient: inline-axis) {\r\n// horizontal|vertical|inline-axis|block-axis|inherit\r\n  @include prefixer(box-orient, $orient, webkit moz spec);\r\n}\r\n\r\n@mixin box-pack($pack: start) {\r\n// start|end|center|justify\r\n  @include prefixer(box-pack, $pack, webkit moz spec);\r\n  -ms-flex-pack: $pack; // IE 10\r\n}\r\n\r\n@mixin box-align($align: stretch) {\r\n// start|end|center|baseline|stretch\r\n  @include prefixer(box-align, $align, webkit moz spec);\r\n  -ms-flex-align: $align; // IE 10\r\n}\r\n\r\n@mixin box-direction($direction: normal) {\r\n// normal|reverse|inherit\r\n  @include prefixer(box-direction, $direction, webkit moz spec);\r\n  -ms-flex-direction: $direction; // IE 10\r\n}\r\n\r\n@mixin box-lines($lines: single) {\r\n// single|multiple\r\n  @include prefixer(box-lines, $lines, webkit moz spec);\r\n}\r\n\r\n@mixin box-ordinal-group($int: 1) {\r\n  @include prefixer(box-ordinal-group, $int, webkit moz spec);\r\n  -ms-flex-order: $int; // IE 10\r\n}\r\n\r\n@mixin box-flex($value: 0) {\r\n  @include prefixer(box-flex, $value, webkit moz spec);\r\n  -ms-flex: $value; // IE 10\r\n}\r\n\r\n@mixin box-flex-group($int: 1) {\r\n  @include prefixer(box-flex-group, $int, webkit moz spec);\r\n}\r\n\r\n// CSS3 Flexible Box Model and property defaults\r\n// Unified attributes for 2009, 2011, and 2012 flavours.\r\n\r\n// 2009 - display (box | inline-box)\r\n// 2011 - display (flexbox | inline-flexbox)\r\n// 2012 - display (flex | inline-flex)\r\n@mixin display($value) {\r\n// flex | inline-flex\r\n  @if $value == \"flex\" {\r\n    // 2009\r\n    display: -webkit-box;\r\n    display: -moz-box;\r\n    display: box;\r\n\r\n    // 2012\r\n    display: -webkit-flex;\r\n    display: -moz-flex;\r\n    display: -ms-flexbox; // 2011 (IE 10)\r\n    display: flex;\r\n  } @else if $value == \"inline-flex\" {\r\n    display: -webkit-inline-box;\r\n    display: -moz-inline-box;\r\n    display: inline-box;\r\n\r\n    display: -webkit-inline-flex;\r\n    display: -moz-inline-flex;\r\n    display: -ms-inline-flexbox;\r\n    display: inline-flex;\r\n  } @else {\r\n    display: $value;\r\n  }\r\n}\r\n\r\n// 2009 - box-flex (integer)\r\n// 2011 - flex (decimal | width decimal)\r\n// 2012 - flex (integer integer width)\r\n@mixin flex($value) {\r\n\r\n  // Grab flex-grow for older browsers.\r\n  $flex-grow: nth($value, 1);\r\n\r\n  // 2009\r\n  @include prefixer(box-flex, $flex-grow, webkit moz spec);\r\n\r\n  // 2011 (IE 10), 2012\r\n  @include prefixer(flex, $value, webkit moz ms spec);\r\n}\r\n\r\n// 2009 - box-orient ( horizontal | vertical | inline-axis | block-axis)\r\n//      - box-direction (normal | reverse)\r\n// 2011 - flex-direction (row | row-reverse | column | column-reverse)\r\n// 2012 - flex-direction (row | row-reverse | column | column-reverse)\r\n@mixin flex-direction($value: row) {\r\n\r\n  // Alt values.\r\n  $value-2009: $value;\r\n  $value-2011: $value;\r\n  $direction: normal;\r\n\r\n  @if $value == row {\r\n    $value-2009: horizontal;\r\n  } @else if $value == \"row-reverse\" {\r\n    $value-2009: horizontal;\r\n    $direction: reverse;\r\n  } @else if $value == column {\r\n    $value-2009: vertical;\r\n  } @else if $value == \"column-reverse\" {\r\n    $value-2009: vertical;\r\n    $direction: reverse;\r\n  }\r\n\r\n  // 2009\r\n  @include prefixer(box-orient, $value-2009, webkit moz spec);\r\n  @include prefixer(box-direction, $direction, webkit moz spec);\r\n\r\n  // 2012\r\n  @include prefixer(flex-direction, $value, webkit moz spec);\r\n\r\n  // 2011 (IE 10)\r\n  -ms-flex-direction: $value;\r\n}\r\n\r\n// 2009 - box-lines (single | multiple)\r\n// 2011 - flex-wrap (nowrap | wrap | wrap-reverse)\r\n// 2012 - flex-wrap (nowrap | wrap | wrap-reverse)\r\n@mixin flex-wrap($value: nowrap) {\r\n  // Alt values\r\n  $alt-value: $value;\r\n  @if $value == nowrap {\r\n    $alt-value: single;\r\n  } @else if $value == wrap {\r\n    $alt-value: multiple;\r\n  } @else if $value == \"wrap-reverse\" {\r\n    $alt-value: multiple;\r\n  }\r\n\r\n  @include prefixer(box-lines, $alt-value, webkit moz spec);\r\n  @include prefixer(flex-wrap, $value, webkit moz ms spec);\r\n}\r\n\r\n// 2009 - TODO: parse values into flex-direction/flex-wrap\r\n// 2011 - TODO: parse values into flex-direction/flex-wrap\r\n// 2012 - flex-flow (flex-direction || flex-wrap)\r\n@mixin flex-flow($value) {\r\n  @include prefixer(flex-flow, $value, webkit moz spec);\r\n}\r\n\r\n// 2009 - box-ordinal-group (integer)\r\n// 2011 - flex-order (integer)\r\n// 2012 - order (integer)\r\n@mixin order($int: 0) {\r\n  // 2009\r\n  @include prefixer(box-ordinal-group, $int, webkit moz spec);\r\n\r\n  // 2012\r\n  @include prefixer(order, $int, webkit moz spec);\r\n\r\n  // 2011 (IE 10)\r\n  -ms-flex-order: $int;\r\n}\r\n\r\n// 2012 - flex-grow (number)\r\n@mixin flex-grow($number: 0) {\r\n  @include prefixer(flex-grow, $number, webkit moz spec);\r\n  -ms-flex-positive: $number;\r\n}\r\n\r\n// 2012 - flex-shrink (number)\r\n@mixin flex-shrink($number: 1) {\r\n  @include prefixer(flex-shrink, $number, webkit moz spec);\r\n  -ms-flex-negative: $number;\r\n}\r\n\r\n// 2012 - flex-basis (number)\r\n@mixin flex-basis($width: auto) {\r\n  @include prefixer(flex-basis, $width, webkit moz spec);\r\n  -ms-flex-preferred-size: $width;\r\n}\r\n\r\n// 2009 - box-pack (start | end | center | justify)\r\n// 2011 - flex-pack (start | end | center | justify)\r\n// 2012 - justify-content (flex-start | flex-end | center | space-between | space-around)\r\n@mixin justify-content($value: flex-start) {\r\n\r\n  // Alt values.\r\n  $alt-value: $value;\r\n  @if $value == \"flex-start\" {\r\n    $alt-value: start;\r\n  } @else if $value == \"flex-end\" {\r\n    $alt-value: end;\r\n  } @else if $value == \"space-between\" {\r\n    $alt-value: justify;\r\n  } @else if $value == \"space-around\" {\r\n    $alt-value: distribute;\r\n  }\r\n\r\n  // 2009\r\n  @include prefixer(box-pack, $alt-value, webkit moz spec);\r\n\r\n  // 2012\r\n  @include prefixer(justify-content, $value, webkit moz ms o spec);\r\n\r\n  // 2011 (IE 10)\r\n  -ms-flex-pack: $alt-value;\r\n}\r\n\r\n// 2009 - box-align (start | end | center | baseline | stretch)\r\n// 2011 - flex-align (start | end | center | baseline | stretch)\r\n// 2012 - align-items (flex-start | flex-end | center | baseline | stretch)\r\n@mixin align-items($value: stretch) {\r\n\r\n  $alt-value: $value;\r\n\r\n  @if $value == \"flex-start\" {\r\n    $alt-value: start;\r\n  } @else if $value == \"flex-end\" {\r\n    $alt-value: end;\r\n  }\r\n\r\n  // 2009\r\n  @include prefixer(box-align, $alt-value, webkit moz spec);\r\n\r\n  // 2012\r\n  @include prefixer(align-items, $value, webkit moz ms o spec);\r\n\r\n  // 2011 (IE 10)\r\n  -ms-flex-align: $alt-value;\r\n}\r\n\r\n// 2011 - flex-item-align (auto | start | end | center | baseline | stretch)\r\n// 2012 - align-self (auto | flex-start | flex-end | center | baseline | stretch)\r\n@mixin align-self($value: auto) {\r\n\r\n  $value-2011: $value;\r\n  @if $value == \"flex-start\" {\r\n    $value-2011: start;\r\n  } @else if $value == \"flex-end\" {\r\n    $value-2011: end;\r\n  }\r\n\r\n  // 2012\r\n  @include prefixer(align-self, $value, webkit moz spec);\r\n\r\n  // 2011 (IE 10)\r\n  -ms-flex-item-align: $value-2011;\r\n}\r\n\r\n// 2011 - flex-line-pack (start | end | center | justify | distribute | stretch)\r\n// 2012 - align-content (flex-start | flex-end | center | space-between | space-around | stretch)\r\n@mixin align-content($value: stretch) {\r\n\r\n  $value-2011: $value;\r\n  @if $value == \"flex-start\" {\r\n    $value-2011: start;\r\n  } @else if $value == \"flex-end\" {\r\n    $value-2011: end;\r\n  } @else if $value == \"space-between\" {\r\n    $value-2011: justify;\r\n  } @else if $value == \"space-around\" {\r\n    $value-2011: distribute;\r\n  }\r\n\r\n  // 2012\r\n  @include prefixer(align-content, $value, webkit moz spec);\r\n\r\n  // 2011 (IE 10)\r\n  -ms-flex-line-pack: $value-2011;\r\n}\r\n",
		"@mixin font-face(\r\n  $font-family,\r\n  $file-path,\r\n  $weight: normal,\r\n  $style: normal,\r\n  $asset-pipeline: $asset-pipeline,\r\n  $file-formats: eot woff2 woff ttf svg) {\r\n\r\n  $font-url-prefix: font-url-prefixer($asset-pipeline);\r\n\r\n  @font-face {\r\n    font-family: $font-family;\r\n    font-style: $style;\r\n    font-weight: $weight;\r\n\r\n    src: font-source-declaration(\r\n      $font-family,\r\n      $file-path,\r\n      $asset-pipeline,\r\n      $file-formats,\r\n      $font-url-prefix\r\n    );\r\n  }\r\n}\r\n",
		"@mixin font-feature-settings($settings...) {\r\n  @if length($settings) == 0 { $settings: none; }\r\n  @include prefixer(font-feature-settings, $settings, webkit moz ms spec);\r\n}\r\n",
		"// HiDPI mixin. Default value set to 1.3 to target Google Nexus 7 (http://bjango.com/articles/min-device-pixel-ratio/)\r\n@mixin hidpi($ratio: 1.3) {\r\n  @media only screen and (-webkit-min-device-pixel-ratio: $ratio),\r\n  only screen and (min--moz-device-pixel-ratio: $ratio),\r\n  only screen and (-o-min-device-pixel-ratio: #{$ratio}/1),\r\n  only screen and (min-resolution: round($ratio * 96dpi)),\r\n  only screen and (min-resolution: $ratio * 1dppx) {\r\n    @content;\r\n  }\r\n}\r\n",
		"@mixin hyphens($hyphenation: none) {\r\n  // none | manual | auto\r\n  @include prefixer(hyphens, $hyphenation, webkit moz ms spec);\r\n}\r\n",
		"@mixin image-rendering ($mode:auto) {\r\n\r\n  @if ($mode == crisp-edges) {\r\n    -ms-interpolation-mode: nearest-neighbor; // IE8+\r\n    image-rendering: -moz-crisp-edges;\r\n    image-rendering: -o-crisp-edges;\r\n    image-rendering: -webkit-optimize-contrast;\r\n    image-rendering: crisp-edges;\r\n  }\r\n\r\n  @else {\r\n    image-rendering: $mode;\r\n  }\r\n}\r\n",
		"// Adds keyframes blocks for supported prefixes, removing redundant prefixes in the block's content\r\n@mixin keyframes($name) {\r\n  $original-prefix-for-webkit:    $prefix-for-webkit;\r\n  $original-prefix-for-mozilla:   $prefix-for-mozilla;\r\n  $original-prefix-for-microsoft: $prefix-for-microsoft;\r\n  $original-prefix-for-opera:     $prefix-for-opera;\r\n  $original-prefix-for-spec:      $prefix-for-spec;\r\n\r\n  @if $original-prefix-for-webkit {\r\n    @include disable-prefix-for-all();\r\n    $prefix-for-webkit: true !global;\r\n    @-webkit-keyframes #{$name} {\r\n      @content;\r\n    }\r\n  }\r\n\r\n  @if $original-prefix-for-mozilla {\r\n    @include disable-prefix-for-all();\r\n    $prefix-for-mozilla: true !global;\r\n    @-moz-keyframes #{$name} {\r\n      @content;\r\n    }\r\n  }\r\n\r\n  $prefix-for-webkit:    $original-prefix-for-webkit    !global;\r\n  $prefix-for-mozilla:   $original-prefix-for-mozilla   !global;\r\n  $prefix-for-microsoft: $original-prefix-for-microsoft !global;\r\n  $prefix-for-opera:     $original-prefix-for-opera     !global;\r\n  $prefix-for-spec:      $original-prefix-for-spec      !global;\r\n\r\n  @if $original-prefix-for-spec {\r\n    @keyframes #{$name} {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n",
		"@mixin linear-gradient($pos, $g1, $g2: null,\r\n                       $g3: null, $g4: null,\r\n                       $g5: null, $g6: null,\r\n                       $g7: null, $g8: null,\r\n                       $g9: null, $g10: null,\r\n                       $fallback: null) {\r\n  // Detect what type of value exists in $pos\r\n  $pos-type: type-of(nth($pos, 1));\r\n  $pos-spec: null;\r\n  $pos-degree: null;\r\n\r\n  // If $pos is missing from mixin, reassign vars and add default position\r\n  @if ($pos-type == color) or (nth($pos, 1) == \"transparent\")  {\r\n    $g10: $g9; $g9: $g8; $g8: $g7; $g7: $g6; $g6: $g5;\r\n    $g5: $g4; $g4: $g3; $g3: $g2; $g2: $g1; $g1: $pos;\r\n    $pos: null;\r\n  }\r\n\r\n  @if $pos {\r\n    $positions: _linear-positions-parser($pos);\r\n    $pos-degree: nth($positions, 1);\r\n    $pos-spec:   nth($positions, 2);\r\n  }\r\n\r\n  $full: $g1, $g2, $g3, $g4, $g5, $g6, $g7, $g8, $g9, $g10;\r\n\r\n  // Set $g1 as the default fallback color\r\n  $fallback-color: nth($g1, 1);\r\n\r\n  // If $fallback is a color use that color as the fallback color\r\n  @if (type-of($fallback) == color) or ($fallback == \"transparent\") {\r\n    $fallback-color: $fallback;\r\n  }\r\n\r\n  background-color: $fallback-color;\r\n  background-image: -webkit-linear-gradient($pos-degree $full); // Safari 5.1+, Chrome\r\n  background-image: unquote(\"linear-gradient(#{$pos-spec}#{$full})\");\r\n}\r\n",
		"@mixin perspective($depth: none) {\r\n  // none | <length>\r\n  @include prefixer(perspective, $depth, webkit moz spec);\r\n}\r\n\r\n@mixin perspective-origin($value: 50% 50%) {\r\n  @include prefixer(perspective-origin, $value, webkit moz spec);\r\n}\r\n",
		"@mixin placeholder {\r\n  $placeholders: \":-webkit-input\" \":-moz\" \"-moz\" \"-ms-input\";\r\n  @each $placeholder in $placeholders {\r\n    &:#{$placeholder}-placeholder {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n",
		"// Requires Sass 3.1+\r\n@mixin radial-gradient($g1, $g2,\r\n                       $g3: null, $g4: null,\r\n                       $g5: null, $g6: null,\r\n                       $g7: null, $g8: null,\r\n                       $g9: null, $g10: null,\r\n                       $pos: null,\r\n                       $shape-size: null,\r\n                       $fallback: null) {\r\n\r\n  $data: _radial-arg-parser($g1, $g2, $pos, $shape-size);\r\n  $g1:  nth($data, 1);\r\n  $g2:  nth($data, 2);\r\n  $pos: nth($data, 3);\r\n  $shape-size: nth($data, 4);\r\n\r\n  $full: $g1, $g2, $g3, $g4, $g5, $g6, $g7, $g8, $g9, $g10;\r\n\r\n  // Strip deprecated cover/contain for spec\r\n  $shape-size-spec: _shape-size-stripper($shape-size);\r\n\r\n  // Set $g1 as the default fallback color\r\n  $first-color: nth($full, 1);\r\n  $fallback-color: nth($first-color, 1);\r\n\r\n  @if (type-of($fallback) == color) or ($fallback == \"transparent\") {\r\n    $fallback-color: $fallback;\r\n  }\r\n\r\n  // Add Commas and spaces\r\n  $shape-size: if($shape-size, \"#{$shape-size}, \", null);\r\n  $pos:        if($pos, \"#{$pos}, \", null);\r\n  $pos-spec:   if($pos, \"at #{$pos}\", null);\r\n  $shape-size-spec: if(($shape-size-spec != \" \") and ($pos == null), \"#{$shape-size-spec}, \", \"#{$shape-size-spec} \");\r\n\r\n  background-color:  $fallback-color;\r\n  background-image: -webkit-radial-gradient(#{$pos}#{$shape-size}#{$full});\r\n  background-image: radial-gradient(#{$shape-size-spec}#{$pos-spec}#{$full});\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Outputs the spec and prefixed versions of the `::selection` pseudo-element.\r\n///\r\n/// @param {Bool} $current-selector [false]\r\n///   If set to `true`, it takes the current element into consideration.\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include selection(true) {\r\n///       background-color: #ffbb52;\r\n///     }\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element::-moz-selection {\r\n///     background-color: #ffbb52;\r\n///   }\r\n///\r\n///   .element::selection {\r\n///     background-color: #ffbb52;\r\n///   }\r\n\r\n@mixin selection($current-selector: false) {\r\n  @if $current-selector {\r\n    &::-moz-selection {\r\n      @content;\r\n    }\r\n\r\n    &::selection {\r\n      @content;\r\n    }\r\n  } @else {\r\n    ::-moz-selection {\r\n      @content;\r\n    }\r\n\r\n    ::selection {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n",
		"@mixin text-decoration($value) {\r\n// <text-decoration-line> || <text-decoration-style> || <text-decoration-color>\r\n  @include prefixer(text-decoration, $value, moz);\r\n}\r\n\r\n@mixin text-decoration-line($line: none) {\r\n// none || underline || overline || line-through\r\n  @include prefixer(text-decoration-line, $line, moz);\r\n}\r\n\r\n@mixin text-decoration-style($style: solid) {\r\n// solid || double || dotted || dashed || wavy\r\n  @include prefixer(text-decoration-style, $style, moz webkit);\r\n}\r\n\r\n@mixin text-decoration-color($color: currentColor) {\r\n// currentColor || <color>\r\n  @include prefixer(text-decoration-color, $color, moz);\r\n}\r\n",
		"@mixin transform($property: none) {\r\n  // none | <transform-function>\r\n  @include prefixer(transform, $property, webkit moz ms o spec);\r\n}\r\n\r\n@mixin transform-origin($axes: 50%) {\r\n  // x-axis - left | center | right  | length | %\r\n  // y-axis - top  | center | bottom | length | %\r\n  // z-axis -                          length\r\n  @include prefixer(transform-origin, $axes, webkit moz ms o spec);\r\n}\r\n\r\n@mixin transform-style($style: flat) {\r\n  @include prefixer(transform-style, $style, webkit moz ms o spec);\r\n}\r\n",
		"// Shorthand mixin. Supports multiple parentheses-deliminated values for each variable.\r\n// Example: @include transition (all 2s ease-in-out);\r\n//          @include transition (opacity 1s ease-in 2s, width 2s ease-out);\r\n//          @include transition-property (transform, opacity);\r\n\r\n@mixin transition($properties...) {\r\n  // Fix for vendor-prefix transform property\r\n  $needs-prefixes: false;\r\n  $webkit: ();\r\n  $moz: ();\r\n  $spec: ();\r\n\r\n  // Create lists for vendor-prefixed transform\r\n  @each $list in $properties {\r\n    @if nth($list, 1) == \"transform\" {\r\n      $needs-prefixes: true;\r\n      $list1: -webkit-transform;\r\n      $list2: -moz-transform;\r\n      $list3: ();\r\n\r\n      @each $var in $list {\r\n        $list3: join($list3, $var);\r\n\r\n        @if $var != \"transform\" {\r\n          $list1: join($list1, $var);\r\n          $list2: join($list2, $var);\r\n        }\r\n      }\r\n\r\n      $webkit: append($webkit, $list1);\r\n      $moz:    append($moz,    $list2);\r\n      $spec:   append($spec,   $list3);\r\n    } @else {\r\n      $webkit: append($webkit, $list, comma);\r\n      $moz:    append($moz,    $list, comma);\r\n      $spec:   append($spec,   $list, comma);\r\n    }\r\n  }\r\n\r\n  @if $needs-prefixes {\r\n    -webkit-transition: $webkit;\r\n       -moz-transition: $moz;\r\n            transition: $spec;\r\n  } @else {\r\n    @if length($properties) >= 1 {\r\n      @include prefixer(transition, $properties, webkit moz spec);\r\n    } @else {\r\n      $properties: all 0.15s ease-out 0s;\r\n      @include prefixer(transition, $properties, webkit moz spec);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin transition-property($properties...) {\r\n  -webkit-transition-property: transition-property-names($properties, \"webkit\");\r\n     -moz-transition-property: transition-property-names($properties, \"moz\");\r\n          transition-property: transition-property-names($properties, false);\r\n}\r\n\r\n@mixin transition-duration($times...) {\r\n  @include prefixer(transition-duration, $times, webkit moz spec);\r\n}\r\n\r\n@mixin transition-timing-function($motions...) {\r\n  // ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier()\r\n  @include prefixer(transition-timing-function, $motions, webkit moz spec);\r\n}\r\n\r\n@mixin transition-delay($times...) {\r\n  @include prefixer(transition-delay, $times, webkit moz spec);\r\n}\r\n",
		"@mixin user-select($value: none) {\r\n  @include prefixer(user-select, $value, webkit moz ms spec);\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Provides a quick method for targeting `border-color` on specific sides of a box. Use a `null` value to “skip” a side.\r\n///\r\n/// @param {Arglist} $vals\r\n///   List of arguments\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include border-color(#a60b55 #76cd9c null #e8ae1a);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     border-left-color: #e8ae1a;\r\n///     border-right-color: #76cd9c;\r\n///     border-top-color: #a60b55;\r\n///   }\r\n///\r\n/// @require {mixin} directional-property\r\n///\r\n/// @output `border-color`\r\n\r\n@mixin border-color($vals...) {\r\n  @include directional-property(border, color, $vals...);\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Provides a quick method for targeting `border-radius` on both corners on the side of a box.\r\n///\r\n/// @param {Number} $radii\r\n///   List of arguments\r\n///\r\n/// @example scss - Usage\r\n///   .element-one {\r\n///     @include border-top-radius(5px);\r\n///   }\r\n///\r\n///   .element-two {\r\n///     @include border-left-radius(3px);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element-one {\r\n///     border-top-left-radius: 5px;\r\n///     border-top-right-radius: 5px;\r\n///   }\r\n///\r\n///   .element-two {\r\n///     border-bottom-left-radius: 3px;\r\n///     border-top-left-radius: 3px;\r\n///   }\r\n///\r\n/// @output `border-radius`\r\n\r\n@mixin border-top-radius($radii) {\r\n  border-top-left-radius: $radii;\r\n  border-top-right-radius: $radii;\r\n}\r\n\r\n@mixin border-right-radius($radii) {\r\n  border-bottom-right-radius: $radii;\r\n  border-top-right-radius: $radii;\r\n}\r\n\r\n@mixin border-bottom-radius($radii) {\r\n  border-bottom-left-radius: $radii;\r\n  border-bottom-right-radius: $radii;\r\n}\r\n\r\n@mixin border-left-radius($radii) {\r\n  border-bottom-left-radius: $radii;\r\n  border-top-left-radius: $radii;\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Provides a quick method for targeting `border-style` on specific sides of a box. Use a `null` value to “skip” a side.\r\n///\r\n/// @param {Arglist} $vals\r\n///   List of arguments\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include border-style(dashed null solid);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     border-bottom-style: solid;\r\n///     border-top-style: dashed;\r\n///   }\r\n///\r\n/// @require {mixin} directional-property\r\n///\r\n/// @output `border-style`\r\n\r\n@mixin border-style($vals...) {\r\n  @include directional-property(border, style, $vals...);\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Provides a quick method for targeting `border-width` on specific sides of a box. Use a `null` value to “skip” a side.\r\n///\r\n/// @param {Arglist} $vals\r\n///   List of arguments\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include border-width(1em null 20px);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     border-bottom-width: 20px;\r\n///     border-top-width: 1em;\r\n///   }\r\n///\r\n/// @require {mixin} directional-property\r\n///\r\n/// @output `border-width`\r\n\r\n@mixin border-width($vals...) {\r\n  @include directional-property(border, width, $vals...);\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Generates variables for all buttons. Please note that you must use interpolation on the variable: `#{$all-buttons}`.\r\n///\r\n/// @example scss - Usage\r\n///   #{$all-buttons} {\r\n///     background-color: #f00;\r\n///   }\r\n///\r\n///   #{$all-buttons-focus},\r\n///   #{$all-buttons-hover} {\r\n///     background-color: #0f0;\r\n///   }\r\n///\r\n///   #{$all-buttons-active} {\r\n///     background-color: #00f;\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   button,\r\n///   input[type=\"button\"],\r\n///   input[type=\"reset\"],\r\n///   input[type=\"submit\"] {\r\n///     background-color: #f00;\r\n///   }\r\n///\r\n///   button:focus,\r\n///   input[type=\"button\"]:focus,\r\n///   input[type=\"reset\"]:focus,\r\n///   input[type=\"submit\"]:focus,\r\n///   button:hover,\r\n///   input[type=\"button\"]:hover,\r\n///   input[type=\"reset\"]:hover,\r\n///   input[type=\"submit\"]:hover {\r\n///     background-color: #0f0;\r\n///   }\r\n///\r\n///   button:active,\r\n///   input[type=\"button\"]:active,\r\n///   input[type=\"reset\"]:active,\r\n///   input[type=\"submit\"]:active {\r\n///     background-color: #00f;\r\n///   }\r\n///\r\n/// @require assign-inputs\r\n///\r\n/// @type List\r\n///\r\n/// @todo Remove double assigned variables (Lines 59–62) in v5.0.0\r\n\r\n$buttons-list: 'button',\r\n               'input[type=\"button\"]',\r\n               'input[type=\"reset\"]',\r\n               'input[type=\"submit\"]';\r\n\r\n$all-buttons:        assign-inputs($buttons-list);\r\n$all-buttons-active: assign-inputs($buttons-list, active);\r\n$all-buttons-focus:  assign-inputs($buttons-list, focus);\r\n$all-buttons-hover:  assign-inputs($buttons-list, hover);\r\n\r\n$all-button-inputs:        $all-buttons;\r\n$all-button-inputs-active: $all-buttons-active;\r\n$all-button-inputs-focus:  $all-buttons-focus;\r\n$all-button-inputs-hover:  $all-buttons-hover;\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Provides an easy way to include a clearfix for containing floats.\r\n///\r\n/// @link http://cssmojo.com/latest_new_clearfix_so_far/\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include clearfix;\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element::after {\r\n///     clear: both;\r\n///     content: \"\";\r\n///     display: table;\r\n///   }\r\n\r\n@mixin clearfix {\r\n  &::after {\r\n    clear: both;\r\n    content: \"\";\r\n    display: table;\r\n  }\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Truncates text and adds an ellipsis to represent overflow.\r\n///\r\n/// @param {Number} $width [100%]\r\n///   Max-width for the string to respect before being truncated\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include ellipsis;\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     display: inline-block;\r\n///     max-width: 100%;\r\n///     overflow: hidden;\r\n///     text-overflow: ellipsis;\r\n///     white-space: nowrap;\r\n///     word-wrap: normal;\r\n///   }\r\n\r\n@mixin ellipsis($width: 100%) {\r\n  display: inline-block;\r\n  max-width: $width;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  word-wrap: normal;\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Georgia font stack.\r\n///\r\n/// @type List\r\n\r\n$georgia: \"Georgia\", \"Cambria\", \"Times New Roman\", \"Times\", serif;\r\n\r\n/// Helvetica font stack.\r\n///\r\n/// @type List\r\n\r\n$helvetica: \"Helvetica Neue\", \"Helvetica\", \"Roboto\", \"Arial\", sans-serif;\r\n\r\n/// Lucida Grande font stack.\r\n///\r\n/// @type List\r\n\r\n$lucida-grande: \"Lucida Grande\", \"Tahoma\", \"Verdana\", \"Arial\", sans-serif;\r\n\r\n/// Monospace font stack.\r\n///\r\n/// @type List\r\n\r\n$monospace: \"Bitstream Vera Sans Mono\", \"Consolas\", \"Courier\", monospace;\r\n\r\n/// Verdana font stack.\r\n///\r\n/// @type List\r\n\r\n$verdana: \"Verdana\", \"Geneva\", sans-serif;\r\n",
		"/// Hides the text in an element, commonly used to show an image. Some elements will need block-level styles applied.\r\n///\r\n/// @link http://zeldman.com/2012/03/01/replacing-the-9999px-hack-new-image-replacement\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include hide-text;\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     overflow: hidden;\r\n///     text-indent: 101%;\r\n///     white-space: nowrap;\r\n///   }\r\n///\r\n/// @todo Remove height argument in v5.0.0\r\n\r\n@mixin hide-text($height: null) {\r\n  overflow: hidden;\r\n  text-indent: 101%;\r\n  white-space: nowrap;\r\n\r\n  @if $height {\r\n    @warn \"The `hide-text` mixin has changed and no longer requires a height. The height argument will no longer be accepted in v5.0.0\";\r\n  }\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Provides a quick method for targeting `margin` on specific sides of a box. Use a `null` value to “skip” a side.\r\n///\r\n/// @param {Arglist} $vals\r\n///   List of arguments\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include margin(null 10px 3em 20vh);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     margin-bottom: 3em;\r\n///     margin-left: 20vh;\r\n///     margin-right: 10px;\r\n///   }\r\n///\r\n/// @require {mixin} directional-property\r\n///\r\n/// @output `margin`\r\n\r\n@mixin margin($vals...) {\r\n  @include directional-property(margin, false, $vals...);\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Provides a quick method for targeting `padding` on specific sides of a box. Use a `null` value to “skip” a side.\r\n///\r\n/// @param {Arglist} $vals\r\n///   List of arguments\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include padding(12vh null 10px 5%);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     padding-bottom: 10px;\r\n///     padding-left: 5%;\r\n///     padding-top: 12vh;\r\n///   }\r\n///\r\n/// @require {mixin} directional-property\r\n///\r\n/// @output `padding`\r\n\r\n@mixin padding($vals...) {\r\n  @include directional-property(padding, false, $vals...);\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Provides a quick method for setting an element’s position. Use a `null` value to “skip” a side.\r\n///\r\n/// @param {Position} $position [relative]\r\n///   A CSS position value\r\n///\r\n/// @param {Arglist} $coordinates [null null null null]\r\n///   List of values that correspond to the 4-value syntax for the edges of a box\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include position(absolute, 0 null null 10em);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     left: 10em;\r\n///     position: absolute;\r\n///     top: 0;\r\n///   }\r\n///\r\n/// @require {function} is-length\r\n/// @require {function} unpack\r\n\r\n@mixin position($position: relative, $coordinates: null null null null) {\r\n  @if type-of($position) == list {\r\n    $coordinates: $position;\r\n    $position: relative;\r\n  }\r\n\r\n  $coordinates: unpack($coordinates);\r\n\r\n  $offsets: (\r\n    top:    nth($coordinates, 1),\r\n    right:  nth($coordinates, 2),\r\n    bottom: nth($coordinates, 3),\r\n    left:   nth($coordinates, 4)\r\n  );\r\n\r\n  position: $position;\r\n\r\n  @each $offset, $value in $offsets {\r\n    @if is-length($value) {\r\n      #{$offset}: $value;\r\n    }\r\n  }\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// A mixin for generating vendor prefixes on non-standardized properties.\r\n///\r\n/// @param {String} $property\r\n///   Property to prefix\r\n///\r\n/// @param {*} $value\r\n///   Value to use\r\n///\r\n/// @param {List} $prefixes\r\n///   Prefixes to define\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include prefixer(border-radius, 10px, webkit ms spec);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     -webkit-border-radius: 10px;\r\n///     -moz-border-radius: 10px;\r\n///     border-radius: 10px;\r\n///   }\r\n///\r\n/// @require {variable} $prefix-for-webkit\r\n/// @require {variable} $prefix-for-mozilla\r\n/// @require {variable} $prefix-for-microsoft\r\n/// @require {variable} $prefix-for-opera\r\n/// @require {variable} $prefix-for-spec\r\n\r\n@mixin prefixer($property, $value, $prefixes) {\r\n  @each $prefix in $prefixes {\r\n    @if $prefix == webkit {\r\n      @if $prefix-for-webkit {\r\n        -webkit-#{$property}: $value;\r\n      }\r\n    } @else if $prefix == moz {\r\n      @if $prefix-for-mozilla {\r\n        -moz-#{$property}: $value;\r\n      }\r\n    } @else if $prefix == ms {\r\n      @if $prefix-for-microsoft {\r\n        -ms-#{$property}: $value;\r\n      }\r\n    } @else if $prefix == o {\r\n      @if $prefix-for-opera {\r\n        -o-#{$property}: $value;\r\n      }\r\n    } @else if $prefix == spec {\r\n      @if $prefix-for-spec {\r\n        #{$property}: $value;\r\n      }\r\n    } @else  {\r\n      @warn \"Unrecognized prefix: #{$prefix}\";\r\n    }\r\n  }\r\n}\r\n\r\n@mixin disable-prefix-for-all() {\r\n  $prefix-for-webkit:    false !global;\r\n  $prefix-for-mozilla:   false !global;\r\n  $prefix-for-microsoft: false !global;\r\n  $prefix-for-opera:     false !global;\r\n  $prefix-for-spec:      false !global;\r\n}\r\n",
		"@mixin retina-image($filename, $background-size, $extension: png, $retina-filename: null, $retina-suffix: _2x, $asset-pipeline: $asset-pipeline) {\r\n  @if $asset-pipeline {\r\n    background-image: image-url(\"#{$filename}.#{$extension}\");\r\n  } @else {\r\n    background-image:       url(\"#{$filename}.#{$extension}\");\r\n  }\r\n\r\n  @include hidpi {\r\n    @if $asset-pipeline {\r\n      @if $retina-filename {\r\n        background-image: image-url(\"#{$retina-filename}.#{$extension}\");\r\n      } @else {\r\n        background-image: image-url(\"#{$filename}#{$retina-suffix}.#{$extension}\");\r\n      }\r\n    } @else {\r\n      @if $retina-filename {\r\n        background-image: url(\"#{$retina-filename}.#{$extension}\");\r\n      } @else {\r\n        background-image: url(\"#{$filename}#{$retina-suffix}.#{$extension}\");\r\n      }\r\n    }\r\n\r\n    background-size: $background-size;\r\n  }\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Sets the `width` and `height` of the element.\r\n///\r\n/// @param {List} $size\r\n///   A list of at most 2 size values.\r\n///\r\n///   If there is only a single value in `$size` it is used for both width and height. All units are supported.\r\n///\r\n/// @example scss - Usage\r\n///   .first-element {\r\n///     @include size(2em);\r\n///   }\r\n///\r\n///   .second-element {\r\n///     @include size(auto 10em);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .first-element {\r\n///     width: 2em;\r\n///     height: 2em;\r\n///   }\r\n///\r\n///   .second-element {\r\n///     width: auto;\r\n///     height: 10em;\r\n///   }\r\n///\r\n/// @todo Refactor in 5.0.0 to use a comma-separated argument\r\n\r\n@mixin size($value) {\r\n  $width: nth($value, 1);\r\n  $height: $width;\r\n\r\n  @if length($value) > 1 {\r\n    $height: nth($value, 2);\r\n  }\r\n\r\n  @if is-size($height) {\r\n    height: $height;\r\n  } @else {\r\n    @warn \"`#{$height}` is not a valid length for the `$height` parameter in the `size` mixin.\";\r\n  }\r\n\r\n  @if is-size($width) {\r\n    width: $width;\r\n  } @else {\r\n    @warn \"`#{$width}` is not a valid length for the `$width` parameter in the `size` mixin.\";\r\n  }\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Generates variables for all text-based inputs. Please note that you must use interpolation on the variable: `#{$all-text-inputs}`.\r\n///\r\n/// @example scss - Usage\r\n///   #{$all-text-inputs} {\r\n///     border: 1px solid #f00;\r\n///   }\r\n///\r\n///   #{$all-text-inputs-focus},\r\n///   #{$all-text-inputs-hover} {\r\n///     border: 1px solid #0f0;\r\n///   }\r\n///\r\n///   #{$all-text-inputs-active} {\r\n///     border: 1px solid #00f;\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   input[type=\"color\"],\r\n///   input[type=\"date\"],\r\n///   input[type=\"datetime\"],\r\n///   input[type=\"datetime-local\"],\r\n///   input[type=\"email\"],\r\n///   input[type=\"month\"],\r\n///   input[type=\"number\"],\r\n///   input[type=\"password\"],\r\n///   input[type=\"search\"],\r\n///   input[type=\"tel\"],\r\n///   input[type=\"text\"],\r\n///   input[type=\"time\"],\r\n///   input[type=\"url\"],\r\n///   input[type=\"week\"],\r\n///   textarea {\r\n///     border: 1px solid #f00;\r\n///   }\r\n///\r\n///   input[type=\"color\"]:focus,\r\n///   input[type=\"date\"]:focus,\r\n///   input[type=\"datetime\"]:focus,\r\n///   input[type=\"datetime-local\"]:focus,\r\n///   input[type=\"email\"]:focus,\r\n///   input[type=\"month\"]:focus,\r\n///   input[type=\"number\"]:focus,\r\n///   input[type=\"password\"]:focus,\r\n///   input[type=\"search\"]:focus,\r\n///   input[type=\"tel\"]:focus,\r\n///   input[type=\"text\"]:focus,\r\n///   input[type=\"time\"]:focus,\r\n///   input[type=\"url\"]:focus,\r\n///   input[type=\"week\"]:focus,\r\n///   textarea:focus,\r\n///   input[type=\"color\"]:hover,\r\n///   input[type=\"date\"]:hover,\r\n///   input[type=\"datetime\"]:hover,\r\n///   input[type=\"datetime-local\"]:hover,\r\n///   input[type=\"email\"]:hover,\r\n///   input[type=\"month\"]:hover,\r\n///   input[type=\"number\"]:hover,\r\n///   input[type=\"password\"]:hover,\r\n///   input[type=\"search\"]:hover,\r\n///   input[type=\"tel\"]:hover,\r\n///   input[type=\"text\"]:hover,\r\n///   input[type=\"time\"]:hover,\r\n///   input[type=\"url\"]:hover,\r\n///   input[type=\"week\"]:hover,\r\n///   textarea:hover {\r\n///     border: 1px solid #0f0;\r\n///   }\r\n///\r\n///   input[type=\"color\"]:active,\r\n///   input[type=\"date\"]:active,\r\n///   input[type=\"datetime\"]:active,\r\n///   input[type=\"datetime-local\"]:active,\r\n///   input[type=\"email\"]:active,\r\n///   input[type=\"month\"]:active,\r\n///   input[type=\"number\"]:active,\r\n///   input[type=\"password\"]:active,\r\n///   input[type=\"search\"]:active,\r\n///   input[type=\"tel\"]:active,\r\n///   input[type=\"text\"]:active,\r\n///   input[type=\"time\"]:active,\r\n///   input[type=\"url\"]:active,\r\n///   input[type=\"week\"]:active,\r\n///   textarea:active {\r\n///     border: 1px solid #00f;\r\n///   }\r\n///\r\n/// @require assign-inputs\r\n///\r\n/// @type List\r\n\r\n$text-inputs-list: 'input[type=\"color\"]',\r\n                   'input[type=\"date\"]',\r\n                   'input[type=\"datetime\"]',\r\n                   'input[type=\"datetime-local\"]',\r\n                   'input[type=\"email\"]',\r\n                   'input[type=\"month\"]',\r\n                   'input[type=\"number\"]',\r\n                   'input[type=\"password\"]',\r\n                   'input[type=\"search\"]',\r\n                   'input[type=\"tel\"]',\r\n                   'input[type=\"text\"]',\r\n                   'input[type=\"time\"]',\r\n                   'input[type=\"url\"]',\r\n                   'input[type=\"week\"]',\r\n                   'input:not([type])',\r\n                   'textarea';\r\n\r\n$all-text-inputs:        assign-inputs($text-inputs-list);\r\n$all-text-inputs-active: assign-inputs($text-inputs-list, active);\r\n$all-text-inputs-focus:  assign-inputs($text-inputs-list, focus);\r\n$all-text-inputs-hover:  assign-inputs($text-inputs-list, hover);\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// CSS cubic-bezier timing functions. Timing functions courtesy of jquery.easie (github.com/jaukia/easie)\r\n///\r\n/// Timing functions are the same as demoed here: http://jqueryui.com/resources/demos/effect/easing.html\r\n///\r\n/// @type cubic-bezier\r\n\r\n$ease-in-quad:      cubic-bezier(0.550,  0.085, 0.680, 0.530);\r\n$ease-in-cubic:     cubic-bezier(0.550,  0.055, 0.675, 0.190);\r\n$ease-in-quart:     cubic-bezier(0.895,  0.030, 0.685, 0.220);\r\n$ease-in-quint:     cubic-bezier(0.755,  0.050, 0.855, 0.060);\r\n$ease-in-sine:      cubic-bezier(0.470,  0.000, 0.745, 0.715);\r\n$ease-in-expo:      cubic-bezier(0.950,  0.050, 0.795, 0.035);\r\n$ease-in-circ:      cubic-bezier(0.600,  0.040, 0.980, 0.335);\r\n$ease-in-back:      cubic-bezier(0.600, -0.280, 0.735, 0.045);\r\n\r\n$ease-out-quad:     cubic-bezier(0.250,  0.460, 0.450, 0.940);\r\n$ease-out-cubic:    cubic-bezier(0.215,  0.610, 0.355, 1.000);\r\n$ease-out-quart:    cubic-bezier(0.165,  0.840, 0.440, 1.000);\r\n$ease-out-quint:    cubic-bezier(0.230,  1.000, 0.320, 1.000);\r\n$ease-out-sine:     cubic-bezier(0.390,  0.575, 0.565, 1.000);\r\n$ease-out-expo:     cubic-bezier(0.190,  1.000, 0.220, 1.000);\r\n$ease-out-circ:     cubic-bezier(0.075,  0.820, 0.165, 1.000);\r\n$ease-out-back:     cubic-bezier(0.175,  0.885, 0.320, 1.275);\r\n\r\n$ease-in-out-quad:  cubic-bezier(0.455,  0.030, 0.515, 0.955);\r\n$ease-in-out-cubic: cubic-bezier(0.645,  0.045, 0.355, 1.000);\r\n$ease-in-out-quart: cubic-bezier(0.770,  0.000, 0.175, 1.000);\r\n$ease-in-out-quint: cubic-bezier(0.860,  0.000, 0.070, 1.000);\r\n$ease-in-out-sine:  cubic-bezier(0.445,  0.050, 0.550, 0.950);\r\n$ease-in-out-expo:  cubic-bezier(1.000,  0.000, 0.000, 1.000);\r\n$ease-in-out-circ:  cubic-bezier(0.785,  0.135, 0.150, 0.860);\r\n$ease-in-out-back:  cubic-bezier(0.680, -0.550, 0.265, 1.550);\r\n",
		"@mixin triangle($size, $color, $direction) {\r\n  $width: nth($size, 1);\r\n  $height: nth($size, length($size));\r\n  $foreground-color: nth($color, 1);\r\n  $background-color: if(length($color) == 2, nth($color, 2), transparent);\r\n  height: 0;\r\n  width: 0;\r\n\r\n  @if ($direction == up) or ($direction == down) or ($direction == right) or ($direction == left) {\r\n    $width: $width / 2;\r\n    $height: if(length($size) > 1, $height, $height/2);\r\n\r\n    @if $direction == up {\r\n      border-bottom: $height solid $foreground-color;\r\n      border-left: $width solid $background-color;\r\n      border-right: $width solid $background-color;\r\n    } @else if $direction == right {\r\n      border-bottom: $width solid $background-color;\r\n      border-left: $height solid $foreground-color;\r\n      border-top: $width solid $background-color;\r\n    } @else if $direction == down {\r\n      border-left: $width solid $background-color;\r\n      border-right: $width solid $background-color;\r\n      border-top: $height solid $foreground-color;\r\n    } @else if $direction == left {\r\n      border-bottom: $width solid $background-color;\r\n      border-right: $height solid $foreground-color;\r\n      border-top: $width solid $background-color;\r\n    }\r\n  } @else if ($direction == up-right) or ($direction == up-left) {\r\n    border-top: $height solid $foreground-color;\r\n\r\n    @if $direction == up-right {\r\n      border-left:  $width solid $background-color;\r\n    } @else if $direction == up-left {\r\n      border-right: $width solid $background-color;\r\n    }\r\n  } @else if ($direction == down-right) or ($direction == down-left) {\r\n    border-bottom: $height solid $foreground-color;\r\n\r\n    @if $direction == down-right {\r\n      border-left:  $width solid $background-color;\r\n    } @else if $direction == down-left {\r\n      border-right: $width solid $background-color;\r\n    }\r\n  } @else if ($direction == inset-up) {\r\n    border-color: $background-color $background-color $foreground-color;\r\n    border-style: solid;\r\n    border-width: $height $width;\r\n  } @else if ($direction == inset-down) {\r\n    border-color: $foreground-color $background-color $background-color;\r\n    border-style: solid;\r\n    border-width: $height $width;\r\n  } @else if ($direction == inset-right) {\r\n    border-color: $background-color $background-color $background-color $foreground-color;\r\n    border-style: solid;\r\n    border-width: $width $height;\r\n  } @else if ($direction == inset-left) {\r\n    border-color: $background-color $foreground-color $background-color $background-color;\r\n    border-style: solid;\r\n    border-width: $width $height;\r\n  }\r\n}\r\n",
		"@charset \"UTF-8\";\r\n\r\n/// Provides an easy way to change the `word-wrap` property.\r\n///\r\n/// @param {String} $wrap [break-word]\r\n///   Value for the `word-break` property.\r\n///\r\n/// @example scss - Usage\r\n///   .wrapper {\r\n///     @include word-wrap(break-word);\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .wrapper {\r\n///     overflow-wrap: break-word;\r\n///     word-break: break-all;\r\n///     word-wrap: break-word;\r\n///   }\r\n\r\n@mixin word-wrap($wrap: break-word) {\r\n  overflow-wrap: $wrap;\r\n  word-wrap: $wrap;\r\n\r\n  @if $wrap == break-word {\r\n    word-break: break-all;\r\n  } @else {\r\n    word-break: $wrap;\r\n  }\r\n}\r\n",
		"// The following features have been deprecated and will be removed in the next MAJOR version release\r\n\r\n@mixin inline-block {\r\n  display: inline-block;\r\n\r\n  @warn \"The inline-block mixin is deprecated and will be removed in the next major version release\";\r\n}\r\n\r\n@mixin button ($style: simple, $base-color: #4294f0, $text-size: inherit, $padding: 7px 18px) {\r\n\r\n  @if type-of($style) == string and type-of($base-color) == color {\r\n    @include buttonstyle($style, $base-color, $text-size, $padding);\r\n  }\r\n\r\n  @if type-of($style) == string and type-of($base-color) == number {\r\n    $padding: $text-size;\r\n    $text-size: $base-color;\r\n    $base-color: #4294f0;\r\n\r\n    @if $padding == inherit {\r\n      $padding: 7px 18px;\r\n    }\r\n\r\n    @include buttonstyle($style, $base-color, $text-size, $padding);\r\n  }\r\n\r\n  @if type-of($style) == color and type-of($base-color) == color {\r\n    $base-color: $style;\r\n    $style: simple;\r\n    @include buttonstyle($style, $base-color, $text-size, $padding);\r\n  }\r\n\r\n  @if type-of($style) == color and type-of($base-color) == number {\r\n    $padding: $text-size;\r\n    $text-size: $base-color;\r\n    $base-color: $style;\r\n    $style: simple;\r\n\r\n    @if $padding == inherit {\r\n      $padding: 7px 18px;\r\n    }\r\n\r\n    @include buttonstyle($style, $base-color, $text-size, $padding);\r\n  }\r\n\r\n  @if type-of($style) == number {\r\n    $padding: $base-color;\r\n    $text-size: $style;\r\n    $base-color: #4294f0;\r\n    $style: simple;\r\n\r\n    @if $padding == #4294f0 {\r\n      $padding: 7px 18px;\r\n    }\r\n\r\n    @include buttonstyle($style, $base-color, $text-size, $padding);\r\n  }\r\n\r\n  &:disabled {\r\n    cursor: not-allowed;\r\n    opacity: 0.5;\r\n  }\r\n\r\n  @warn \"The button mixin is deprecated and will be removed in the next major version release\";\r\n}\r\n\r\n// Selector Style Button\r\n@mixin buttonstyle($type, $b-color, $t-size, $pad) {\r\n  // Grayscale button\r\n  @if $type == simple and $b-color == grayscale($b-color) {\r\n    @include simple($b-color, true, $t-size, $pad);\r\n  }\r\n\r\n  @if $type == shiny and $b-color == grayscale($b-color) {\r\n    @include shiny($b-color, true, $t-size, $pad);\r\n  }\r\n\r\n  @if $type == pill and $b-color == grayscale($b-color) {\r\n    @include pill($b-color, true, $t-size, $pad);\r\n  }\r\n\r\n  @if $type == flat and $b-color == grayscale($b-color) {\r\n    @include flat($b-color, true, $t-size, $pad);\r\n  }\r\n\r\n  // Colored button\r\n  @if $type == simple {\r\n    @include simple($b-color, false, $t-size, $pad);\r\n  }\r\n\r\n  @else if $type == shiny {\r\n    @include shiny($b-color, false, $t-size, $pad);\r\n  }\r\n\r\n  @else if $type == pill {\r\n    @include pill($b-color, false, $t-size, $pad);\r\n  }\r\n\r\n  @else if $type == flat {\r\n    @include flat($b-color, false, $t-size, $pad);\r\n  }\r\n}\r\n\r\n// Simple Button\r\n@mixin simple($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\r\n  $color:         hsl(0, 0, 100%);\r\n  $border:        adjust-color($base-color, $saturation:  9%,  $lightness: -14%);\r\n  $inset-shadow:  adjust-color($base-color, $saturation: -8%,  $lightness:  15%);\r\n  $stop-gradient: adjust-color($base-color, $saturation:  9%,  $lightness: -11%);\r\n  $text-shadow:   adjust-color($base-color, $saturation:  15%, $lightness: -18%);\r\n\r\n  @if is-light($base-color) {\r\n    $color:       hsl(0, 0, 20%);\r\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\r\n  }\r\n\r\n  @if $grayscale == true {\r\n    $border:        grayscale($border);\r\n    $inset-shadow:  grayscale($inset-shadow);\r\n    $stop-gradient: grayscale($stop-gradient);\r\n    $text-shadow:   grayscale($text-shadow);\r\n  }\r\n\r\n  border: 1px solid $border;\r\n  border-radius: 3px;\r\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\r\n  color: $color;\r\n  display: inline-block;\r\n  font-size: $textsize;\r\n  font-weight: bold;\r\n  @include linear-gradient ($base-color, $stop-gradient);\r\n  padding: $padding;\r\n  text-decoration: none;\r\n  text-shadow: 0 1px 0 $text-shadow;\r\n  background-clip: padding-box;\r\n\r\n  &:hover:not(:disabled) {\r\n    $base-color-hover:    adjust-color($base-color, $saturation: -4%, $lightness: -5%);\r\n    $inset-shadow-hover:  adjust-color($base-color, $saturation: -7%, $lightness:  5%);\r\n    $stop-gradient-hover: adjust-color($base-color, $saturation:  8%, $lightness: -14%);\r\n\r\n    @if $grayscale == true {\r\n      $base-color-hover:    grayscale($base-color-hover);\r\n      $inset-shadow-hover:  grayscale($inset-shadow-hover);\r\n      $stop-gradient-hover: grayscale($stop-gradient-hover);\r\n    }\r\n\r\n    @include linear-gradient ($base-color-hover, $stop-gradient-hover);\r\n\r\n    box-shadow: inset 0 1px 0 0 $inset-shadow-hover;\r\n    cursor: pointer;\r\n  }\r\n\r\n  &:active:not(:disabled),\r\n  &:focus:not(:disabled) {\r\n    $border-active:       adjust-color($base-color, $saturation: 9%, $lightness: -14%);\r\n    $inset-shadow-active: adjust-color($base-color, $saturation: 7%, $lightness: -17%);\r\n\r\n    @if $grayscale == true {\r\n      $border-active:       grayscale($border-active);\r\n      $inset-shadow-active: grayscale($inset-shadow-active);\r\n    }\r\n\r\n    border: 1px solid $border-active;\r\n    box-shadow: inset 0 0 8px 4px $inset-shadow-active, inset 0 0 8px 4px $inset-shadow-active;\r\n  }\r\n}\r\n\r\n// Shiny Button\r\n@mixin shiny($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\r\n  $color:         hsl(0, 0, 100%);\r\n  $border:        adjust-color($base-color, $red: -117, $green: -111, $blue: -81);\r\n  $border-bottom: adjust-color($base-color, $red: -126, $green: -127, $blue: -122);\r\n  $fourth-stop:   adjust-color($base-color, $red: -79,  $green: -70,  $blue: -46);\r\n  $inset-shadow:  adjust-color($base-color, $red:  37,  $green:  29,  $blue:  12);\r\n  $second-stop:   adjust-color($base-color, $red: -56,  $green: -50,  $blue: -33);\r\n  $text-shadow:   adjust-color($base-color, $red: -140, $green: -141, $blue: -114);\r\n  $third-stop:    adjust-color($base-color, $red: -86,  $green: -75,  $blue: -48);\r\n\r\n  @if is-light($base-color) {\r\n    $color:       hsl(0, 0, 20%);\r\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\r\n  }\r\n\r\n  @if $grayscale == true {\r\n    $border:        grayscale($border);\r\n    $border-bottom: grayscale($border-bottom);\r\n    $fourth-stop:   grayscale($fourth-stop);\r\n    $inset-shadow:  grayscale($inset-shadow);\r\n    $second-stop:   grayscale($second-stop);\r\n    $text-shadow:   grayscale($text-shadow);\r\n    $third-stop:    grayscale($third-stop);\r\n  }\r\n\r\n  @include linear-gradient(top, $base-color 0%, $second-stop 50%, $third-stop 50%, $fourth-stop 100%);\r\n\r\n  border: 1px solid $border;\r\n  border-bottom: 1px solid $border-bottom;\r\n  border-radius: 5px;\r\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\r\n  color: $color;\r\n  display: inline-block;\r\n  font-size: $textsize;\r\n  font-weight: bold;\r\n  padding: $padding;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  text-shadow: 0 -1px 1px $text-shadow;\r\n\r\n  &:hover:not(:disabled) {\r\n    $first-stop-hover:  adjust-color($base-color, $red: -13, $green: -15, $blue: -18);\r\n    $second-stop-hover: adjust-color($base-color, $red: -66, $green: -62, $blue: -51);\r\n    $third-stop-hover:  adjust-color($base-color, $red: -93, $green: -85, $blue: -66);\r\n    $fourth-stop-hover: adjust-color($base-color, $red: -86, $green: -80, $blue: -63);\r\n\r\n    @if $grayscale == true {\r\n      $first-stop-hover:  grayscale($first-stop-hover);\r\n      $second-stop-hover: grayscale($second-stop-hover);\r\n      $third-stop-hover:  grayscale($third-stop-hover);\r\n      $fourth-stop-hover: grayscale($fourth-stop-hover);\r\n    }\r\n\r\n    @include linear-gradient(top, $first-stop-hover  0%,\r\n                                  $second-stop-hover 50%,\r\n                                  $third-stop-hover  50%,\r\n                                  $fourth-stop-hover 100%);\r\n    cursor: pointer;\r\n  }\r\n\r\n  &:active:not(:disabled),\r\n  &:focus:not(:disabled) {\r\n    $inset-shadow-active: adjust-color($base-color, $red: -111, $green: -116, $blue: -122);\r\n\r\n    @if $grayscale == true {\r\n      $inset-shadow-active: grayscale($inset-shadow-active);\r\n    }\r\n\r\n    box-shadow: inset 0 0 20px 0 $inset-shadow-active;\r\n  }\r\n}\r\n\r\n// Pill Button\r\n@mixin pill($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\r\n  $color:         hsl(0, 0, 100%);\r\n  $border-bottom: adjust-color($base-color, $hue:  8, $saturation: -11%, $lightness: -26%);\r\n  $border-sides:  adjust-color($base-color, $hue:  4, $saturation: -21%, $lightness: -21%);\r\n  $border-top:    adjust-color($base-color, $hue: -1, $saturation: -30%, $lightness: -15%);\r\n  $inset-shadow:  adjust-color($base-color, $hue: -1, $saturation: -1%,  $lightness:  7%);\r\n  $stop-gradient: adjust-color($base-color, $hue:  8, $saturation:  14%, $lightness: -10%);\r\n  $text-shadow:   adjust-color($base-color, $hue:  5, $saturation: -19%, $lightness: -15%);\r\n\r\n  @if is-light($base-color) {\r\n    $color:       hsl(0, 0, 20%);\r\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\r\n  }\r\n\r\n  @if $grayscale == true {\r\n    $border-bottom: grayscale($border-bottom);\r\n    $border-sides:  grayscale($border-sides);\r\n    $border-top:    grayscale($border-top);\r\n    $inset-shadow:  grayscale($inset-shadow);\r\n    $stop-gradient: grayscale($stop-gradient);\r\n    $text-shadow:   grayscale($text-shadow);\r\n  }\r\n\r\n  border: 1px solid $border-top;\r\n  border-color: $border-top $border-sides $border-bottom;\r\n  border-radius: 16px;\r\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\r\n  color: $color;\r\n  display: inline-block;\r\n  font-size: $textsize;\r\n  font-weight: normal;\r\n  line-height: 1;\r\n  @include linear-gradient ($base-color, $stop-gradient);\r\n  padding: $padding;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  text-shadow: 0 -1px 1px $text-shadow;\r\n  background-clip: padding-box;\r\n\r\n  &:hover:not(:disabled) {\r\n    $base-color-hover:    adjust-color($base-color,                                $lightness: -4.5%);\r\n    $border-bottom:       adjust-color($base-color, $hue:  8, $saturation:  13.5%, $lightness: -32%);\r\n    $border-sides:        adjust-color($base-color, $hue:  4, $saturation: -2%,    $lightness: -27%);\r\n    $border-top:          adjust-color($base-color, $hue: -1, $saturation: -17%,   $lightness: -21%);\r\n    $inset-shadow-hover:  adjust-color($base-color,           $saturation: -1%,    $lightness:  3%);\r\n    $stop-gradient-hover: adjust-color($base-color, $hue:  8, $saturation: -4%,    $lightness: -15.5%);\r\n    $text-shadow-hover:   adjust-color($base-color, $hue:  5, $saturation: -5%,    $lightness: -22%);\r\n\r\n    @if $grayscale == true {\r\n      $base-color-hover:    grayscale($base-color-hover);\r\n      $border-bottom:       grayscale($border-bottom);\r\n      $border-sides:        grayscale($border-sides);\r\n      $border-top:          grayscale($border-top);\r\n      $inset-shadow-hover:  grayscale($inset-shadow-hover);\r\n      $stop-gradient-hover: grayscale($stop-gradient-hover);\r\n      $text-shadow-hover:   grayscale($text-shadow-hover);\r\n    }\r\n\r\n    @include linear-gradient ($base-color-hover, $stop-gradient-hover);\r\n\r\n    background-clip: padding-box;\r\n    border: 1px solid $border-top;\r\n    border-color: $border-top $border-sides $border-bottom;\r\n    box-shadow: inset 0 1px 0 0 $inset-shadow-hover;\r\n    cursor: pointer;\r\n    text-shadow: 0 -1px 1px $text-shadow-hover;\r\n  }\r\n\r\n  &:active:not(:disabled),\r\n  &:focus:not(:disabled) {\r\n    $active-color:         adjust-color($base-color, $hue: 4,  $saturation: -12%,  $lightness: -10%);\r\n    $border-active:        adjust-color($base-color, $hue: 6,  $saturation: -2.5%, $lightness: -30%);\r\n    $border-bottom-active: adjust-color($base-color, $hue: 11, $saturation:  6%,   $lightness: -31%);\r\n    $inset-shadow-active:  adjust-color($base-color, $hue: 9,  $saturation:  2%,   $lightness: -21.5%);\r\n    $text-shadow-active:   adjust-color($base-color, $hue: 5,  $saturation: -12%,  $lightness: -21.5%);\r\n\r\n    @if $grayscale == true {\r\n      $active-color:         grayscale($active-color);\r\n      $border-active:        grayscale($border-active);\r\n      $border-bottom-active: grayscale($border-bottom-active);\r\n      $inset-shadow-active:  grayscale($inset-shadow-active);\r\n      $text-shadow-active:   grayscale($text-shadow-active);\r\n    }\r\n\r\n    background: $active-color;\r\n    border: 1px solid $border-active;\r\n    border-bottom: 1px solid $border-bottom-active;\r\n    box-shadow: inset 0 0 6px 3px $inset-shadow-active;\r\n    text-shadow: 0 -1px 1px $text-shadow-active;\r\n  }\r\n}\r\n\r\n// Flat Button\r\n@mixin flat($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\r\n  $color:         hsl(0, 0, 100%);\r\n\r\n  @if is-light($base-color) {\r\n    $color:       hsl(0, 0, 20%);\r\n  }\r\n\r\n  background-color: $base-color;\r\n  border-radius: 3px;\r\n  border: 0;\r\n  color: $color;\r\n  display: inline-block;\r\n  font-size: $textsize;\r\n  font-weight: bold;\r\n  padding: $padding;\r\n  text-decoration: none;\r\n  background-clip: padding-box;\r\n\r\n  &:hover:not(:disabled){\r\n    $base-color-hover:    adjust-color($base-color, $saturation: 4%, $lightness: 5%);\r\n\r\n    @if $grayscale == true {\r\n      $base-color-hover: grayscale($base-color-hover);\r\n    }\r\n\r\n    background-color: $base-color-hover;\r\n    cursor: pointer;\r\n  }\r\n\r\n  &:active:not(:disabled),\r\n  &:focus:not(:disabled) {\r\n    $base-color-active: adjust-color($base-color, $saturation: -4%, $lightness: -5%);\r\n\r\n    @if $grayscale == true {\r\n      $base-color-active: grayscale($base-color-active);\r\n    }\r\n\r\n    background-color: $base-color-active;\r\n    cursor: pointer;\r\n  }\r\n}\r\n\r\n// Flexible grid\r\n@function flex-grid($columns, $container-columns: $fg-max-columns) {\r\n  $width: $columns * $fg-column + ($columns - 1) * $fg-gutter;\r\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\r\n  @return percentage($width / $container-width);\r\n\r\n  @warn \"The flex-grid function is deprecated and will be removed in the next major version release\";\r\n}\r\n\r\n// Flexible gutter\r\n@function flex-gutter($container-columns: $fg-max-columns, $gutter: $fg-gutter) {\r\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\r\n  @return percentage($gutter / $container-width);\r\n\r\n  @warn \"The flex-gutter function is deprecated and will be removed in the next major version release\";\r\n}\r\n\r\n@function grid-width($n) {\r\n  @return $n * $gw-column + ($n - 1) * $gw-gutter;\r\n\r\n  @warn \"The grid-width function is deprecated and will be removed in the next major version release\";\r\n}\r\n\r\n@function golden-ratio($value, $increment) {\r\n  @return modular-scale($increment, $value, $ratio: $golden);\r\n\r\n  @warn \"The golden-ratio function is deprecated and will be removed in the next major version release. Please use the modular-scale function, instead.\";\r\n}\r\n\r\n@mixin box-sizing($box) {\r\n  @include prefixer(box-sizing, $box, webkit moz spec);\r\n\r\n  @warn \"The box-sizing mixin is deprecated and will be removed in the next major version release. This property can now be used un-prefixed.\";\r\n}\r\n",
		"// Typography\r\n@import url('https://fonts.googleapis.com/css?family=Overpass+Mono:400,700');\r\n$base-font-family: 'Overpass Mono', monospace;\r\n$heading-font-family: $base-font-family;\r\n\r\n// Font Sizes\r\n$base-font-size: 1em;\r\n\r\n// Line height\r\n$base-line-height: 1.5;\r\n$heading-line-height: 1.2;\r\n\r\n// Other Sizes\r\n$base-border-radius: .52em;\r\n$base-spacing: $base-line-height * 1em;\r\n$small-spacing: $base-spacing / 2;\r\n$base-z-index: 0;\r\n\r\n// Colors\r\n$primary-color: #000;\r\n$action-color: $primary-color;\r\n$white-color: #fff;\r\n$black-color: #000;\r\n$blue-color: #0086B3;\r\n$dark-gray-color: #333;\r\n$medium-gray-color: #999;\r\n$light-gray-color: #ccc;\r\n\r\n// Font Colors\r\n$base-font-color: rgba($dark-gray-color, .8);\r\n\r\n// Border\r\n$base-border-color: $light-gray-color;\r\n$base-border: 1px solid $base-border-color;\r\n\r\n// Background Colors\r\n$base-background-color: $white-color;\r\n$secondary-background-color: tint($base-border-color, 80%);\r\n\r\n// Forms\r\n$form-box-shadow: inset 0 1px 3px rgba($black-color, 0.06);\r\n$form-box-shadow-focus: $form-box-shadow, 0 0 5px adjust-color($action-color, $lightness: -5%, $alpha: -0.3);\r\n\r\n// Animations\r\n$base-duration: 150ms;\r\n$base-timing: ease;\r\n",
		"// Bitters 1.1.0\r\n// http://bitters.bourbon.io\r\n// Copyright 2013-2015 thoughtbot, inc.\r\n// MIT License\r\n\r\n@import \"reset\";\r\n@import \"buttons\";\r\n@import \"forms\";\r\n@import \"lists\";\r\n@import \"tables\";\r\n@import \"typography\";\r\n",
		"/* http://meyerweb.com/eric/tools/css/reset/\r\n   v2.0 | 20110126\r\n   License: none (public domain)\r\n*/\r\n\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed,\r\nfigure, figcaption, footer, header, hgroup,\r\nmenu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n  margin: 0;\r\n  padding: 0;\r\n  border: 0;\r\n  font-size: 100%;\r\n  font: inherit;\r\n  vertical-align: baseline;\r\n}\r\n\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure,\r\nfooter, header, hgroup, menu, nav, section {\r\n  display: block;\r\n}\r\n\r\nbody {\r\n  line-height: 1;\r\n}\r\n\r\nol, ul {\r\n  list-style: none;\r\n}\r\n\r\nblockquote, q {\r\n  quotes: none;\r\n}\r\n\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n  content: '';\r\n  content: none;\r\n}\r\n\r\ntable {\r\n  border-collapse: collapse;\r\n  border-spacing: 0;\r\n}\r\n",
		"// #{$all-buttons} {\r\n\r\n.button {\r\n  appearance: none;\r\n  background-color: $action-color;\r\n  border: 0;\r\n  border-radius: $base-border-radius;\r\n  color: $white-color;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  font-family: $base-font-family;\r\n  font-size: $base-font-size;\r\n  -webkit-font-smoothing: antialiased;\r\n  font-weight: 600;\r\n  line-height: 1;\r\n  padding: $small-spacing $base-spacing;\r\n  text-decoration: none;\r\n  transition: background-color $base-duration $base-timing;\r\n  user-select: none;\r\n  vertical-align: middle;\r\n  white-space: nowrap;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: shade($action-color, 20%);\r\n    color: $white-color;\r\n  }\r\n\r\n  &:disabled {\r\n    cursor: not-allowed;\r\n    opacity: 0.5;\r\n\r\n    &:hover {\r\n      background-color: $action-color;\r\n    }\r\n  }\r\n}\r\n",
		"fieldset {\r\n  background-color: $secondary-background-color;\r\n  border: $base-border;\r\n  margin: 0 0 $small-spacing;\r\n  padding: $base-spacing;\r\n}\r\n\r\ninput,\r\nlabel,\r\nselect {\r\n  display: block;\r\n  font-family: $base-font-family;\r\n  font-size: $base-font-size;\r\n}\r\n\r\nlabel {\r\n  font-weight: 600;\r\n  margin-bottom: $small-spacing / 2;\r\n\r\n  &.required::after {\r\n    content: \"*\";\r\n  }\r\n\r\n  abbr {\r\n    display: none;\r\n  }\r\n}\r\n\r\n#{$all-text-inputs},\r\nselect[multiple=multiple] {\r\n  background-color: $base-background-color;\r\n  border: $base-border;\r\n  border-radius: $base-border-radius;\r\n  box-shadow: $form-box-shadow;\r\n  box-sizing: border-box;\r\n  font-family: $base-font-family;\r\n  font-size: $base-font-size;\r\n  margin-bottom: $small-spacing;\r\n  padding: $base-spacing / 3;\r\n  transition: border-color $base-duration $base-timing;\r\n  width: 100%;\r\n\r\n  &:hover {\r\n    border-color: shade($base-border-color, 20%);\r\n  }\r\n\r\n  &:focus {\r\n    border-color: $action-color;\r\n    box-shadow: $form-box-shadow-focus;\r\n    outline: none;\r\n  }\r\n\r\n  &:disabled {\r\n    background-color: shade($base-background-color, 5%);\r\n    cursor: not-allowed;\r\n\r\n    &:hover {\r\n      border: $base-border;\r\n    }\r\n  }\r\n}\r\n\r\ntextarea {\r\n  resize: vertical;\r\n}\r\n\r\ninput[type=\"search\"] {\r\n  appearance: none;\r\n}\r\n\r\ninput[type=\"checkbox\"],\r\ninput[type=\"radio\"] {\r\n  display: inline;\r\n  margin-right: $small-spacing / 2;\r\n\r\n  + label {\r\n    display: inline-block;\r\n  }\r\n}\r\n\r\ninput[type=\"file\"] {\r\n  margin-bottom: $small-spacing;\r\n  width: 100%;\r\n}\r\n\r\nselect {\r\n  margin-bottom: $base-spacing;\r\n  max-width: 100%;\r\n  width: auto;\r\n}\r\n",
		"ul,\r\nol {\r\n  list-style-type: none;\r\n  margin: 0;\r\n  padding: 0;\r\n\r\n  &%default-ul {\r\n    list-style-type: disc;\r\n    margin-bottom: $small-spacing;\r\n    padding-left: $base-spacing;\r\n  }\r\n\r\n  &%default-ol {\r\n    list-style-type: decimal;\r\n    margin-bottom: $small-spacing;\r\n    padding-left: $base-spacing;\r\n  }\r\n}\r\n\r\ndl {\r\n  margin-bottom: $small-spacing;\r\n\r\n  dt {\r\n    font-weight: bold;\r\n    margin-top: $small-spacing;\r\n  }\r\n\r\n  dd {\r\n    margin: 0;\r\n  }\r\n}\r\n",
		"table {\r\n  border-collapse: collapse;\r\n  font-feature-settings: \"kern\", \"liga\", \"tnum\";\r\n  margin: $small-spacing 0;\r\n  table-layout: fixed;\r\n  width: 100%;\r\n}\r\n\r\nth {\r\n  border-bottom: 1px solid shade($base-border-color, 25%);\r\n  font-weight: 600;\r\n  padding: $small-spacing 0;\r\n  text-align: left;\r\n}\r\n\r\ntd {\r\n  border-bottom: $base-border;\r\n  padding: $small-spacing 0;\r\n}\r\n\r\ntr,\r\ntd,\r\nth {\r\n  vertical-align: middle;\r\n}\r\n",
		"body {\r\n  color: $base-font-color;\r\n  font-family: $base-font-family;\r\n  //font-feature-settings: \"kern\", \"liga\", \"pnum\";\r\n  font-size: $base-font-size;\r\n  line-height: $base-line-height;\r\n}\r\n\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\nh6 {\r\n  font-family: $heading-font-family;\r\n  font-size: $base-font-size;\r\n  line-height: $heading-line-height;\r\n  margin: $small-spacing 0 $small-spacing 0;\r\n  font-weight: 700;\r\n}\r\n\r\nh1 {\r\n  font-size: rem(30);\r\n}\r\n\r\nh2 {\r\n  font-size: rem(26);\r\n}\r\n\r\nh3 {\r\n  font-size: rem(24);\r\n}\r\n\r\nh4 {\r\n  font-size: rem(20);\r\n}\r\n\r\nh5,\r\nh6 {\r\n  font-size: rem(16);\r\n}\r\n\r\np {\r\n  margin: 0 0 $small-spacing;\r\n\r\n  &.lead {\r\n    font-size: rem(22);\r\n    font-weight: 300;\r\n  }\r\n}\r\n\r\na {\r\n  color: $action-color;\r\n  text-decoration: none;\r\n  transition: color $base-duration $base-timing;\r\n\r\n  &:active,\r\n  &:focus,\r\n  &:hover {\r\n    color: shade($action-color, 25%);\r\n  }\r\n}\r\n\r\nhr {\r\n  border-bottom: $base-border;\r\n  border-left: 0;\r\n  border-right: 0;\r\n  border-top: 0;\r\n  margin: $base-spacing 0;\r\n}\r\n\r\nimg,\r\npicture {\r\n  margin: 0;\r\n  max-width: 100%;\r\n}\r\n\r\nblockquote {\r\n  padding: $base-spacing 0 $base-spacing $base-spacing;\r\n  margin: $base-spacing 0;\r\n  color: $dark-gray-color;\r\n  line-height: 1.8;\r\n  border-left: $small-spacing solid $light-gray-color;\r\n  background-color: lighten($light-gray-color, 15%);\r\n  p {\r\n    margin: 0;\r\n  }\r\n}\r\n\r\ncode {\r\n  background: none;\r\n  border-radius: 0;\r\n  border: none;\r\n  font-family: \"SFMono-Regular\",Menlo,Consolas,\"Inconsolata\",monospace;\r\n  font-size: 1em;\r\n  margin: 0;\r\n  padding: 0 5px;\r\n  background-color: lighten($light-gray-color, 13%);\r\n}\r\n\r\npre {\r\n  -webkit-overflow-scrolling: touch;\r\n  font-family: \"SFMono-Regular\",Menlo,Consolas,\"Inconsolata\",monospace;\r\n  font-size: 1em;\r\n  margin: 0;\r\n  padding: 5px 10px !important;\r\n  overflow: auto;\r\n  max-height: 60em;\r\n  white-space: pre;\r\n  border: 1px solid $light-gray-color;\r\n\r\n  code {\r\n    line-height: 1.75em;\r\n    padding: 0 !important;\r\n  }\r\n}\r\n\r\nstrong {\r\n  font-weight: bold;\r\n}\r\n\r\nem {\r\n  font-style: italic;\r\n}\r\n\r\nul,\r\nol,\r\ndl {\r\n    margin-top: 0;\r\n    margin-left: 1.2em;\r\n    margin-bottom: 1rem;\r\n    list-style-type: square;\r\n    list-style-position: outside;\r\n    list-style-image: none;\r\n}\r\n",
		"* {\r\n    &,\r\n    &:before,\r\n    &:after {\r\n        box-sizing: border-box;\r\n    }\r\n}\r\n\r\nhtml,\r\nbody {\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n\r\n.clearfix {\r\n    &:before {\r\n        content: \" \";\r\n        display: table;\r\n    }\r\n    &:after {\r\n        content: \" \";\r\n        display: table;\r\n        clear: both;\r\n    }\r\n    *zoom: 1;\r\n}\r\n\r\nbody {\r\n    background-color: $base-background-color;\r\n}\r\n\r\nhr {\r\n    border-top: none;\r\n    border-bottom: 2px solid lighten($light-gray-color, 7%);\r\n    width: 100%;\r\n    margin: $small-spacing 0;\r\n}\r\n\r\n.container {\r\n    padding: $base-spacing;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    max-width: 800px;\r\n    font-weight: normal;\r\n}\r\n\r\n.pull-left {\r\n    float: left;\r\n}\r\n\r\n.pull-right {\r\n    float: right;\r\n}\r\n\r\n.link {\r\n    color: $blue-color;\r\n    padding-bottom: .05em;\r\n    border-bottom: 2px solid transparent;\r\n    @include transition(border 300ms linear);\r\n    &:hover,\r\n    &:focus,\r\n    &:active {\r\n        border-bottom: 2px solid $blue-color;\r\n    }\r\n}\r\n\r\n.site-header {\r\n    border-bottom: 1px solid lighten($light-gray-color, 5%);\r\n    margin-bottom: $small-spacing;\r\n    min-height: 80px;\r\n}\r\n\r\n.intro {\r\n    .author-name {\r\n        display: inline-block;\r\n        padding: 0 .2em;\r\n        background: lighten($light-gray-color, 15%)\r\n    }\r\n    a {\r\n        @extend .link;\r\n    }\r\n    .container {\r\n        padding-bottom: 0;\r\n    }\r\n}\r\n\r\n.logo {\r\n    float: left;\r\n    margin: 0 0 1em 0;\r\n    cursor: pointer;\r\n    letter-spacing: 0.8px;\r\n    font-size: 20px;\r\n    line-height: 28px;\r\n    font-weight: 300;\r\n    span {\r\n        font-weight: 700;\r\n    }\r\n}\r\n\r\n.nav {\r\n    min-height: 64px;\r\n}\r\n\r\n.navbar {\r\n    float: right;\r\n    margin: 0;\r\n    position: relative;\r\n    padding: 0;\r\n    pointer-events: all;\r\n    cursor: pointer;\r\n    li {\r\n        display: inline-block;\r\n        padding: 0 .6em;\r\n    }\r\n    a {\r\n        @extend .link;\r\n    }\r\n}\r\n\r\n.category-title {\r\n    margin: 1em 0 0.5em 0;\r\n    &:first-child {\r\n        margin-top: 0;\r\n    }\r\n}\r\n\r\n.post-item {\r\n    margin-bottom: 0.2em;\r\n    display: block;\r\n    a {\r\n        color: $action-color;\r\n    }\r\n    .article-title {\r\n        display: inline-block;\r\n        width: 85%;\r\n        //border-bottom: 1px dashed lighten($light-gray-color, 10%);\r\n    }\r\n    .date-label {\r\n        //border: 1px solid lighten($light-gray-color, 10%);\r\n        padding: 0 0.2em;\r\n        margin-left: 1em;\r\n        margin-top: 2px;\r\n        @extend .pull-right;\r\n    }\r\n}\r\n\r\n.post-meta {\r\n    color: $medium-gray-color;\r\n    text-transform: uppercase;\r\n    display: inline-block;\r\n    letter-spacing: 1px;\r\n    font-size: rem(14);\r\n    margin-bottom: 1px;\r\n}\r\n\r\n.post-title {\r\n    margin-top: 0;\r\n    margin-bottom: 1em;\r\n    color: $dark-gray-color;\r\n}\r\n\r\n.post-link,\r\n.post a,\r\n.page a {\r\n    @extend .link;\r\n}\r\n\r\n.post {\r\n    @extend .clearfix;\r\n}\r\n\r\n.pagination {\r\n    li,\r\n    a,\r\n    span {\r\n        display: inline-block;\r\n    }\r\n    a,\r\n    span {\r\n        font-size: rem(12);\r\n        padding: .5em;\r\n    }\r\n    .prev,\r\n    .next {\r\n        @extend .link;\r\n    }\r\n}\r\n\r\n.share {\r\n    border-top: 0.2em dashed lighten($light-gray-color, 13%);\r\n    padding-top: $base-spacing;\r\n    margin-top: $base-spacing * 2;\r\n    p {\r\n        margin: 0 5em;\r\n        font-size: rem(14);\r\n        color: $medium-gray-color;\r\n    }\r\n}\r\n\r\n.disqus {\r\n    background-color: lighten($light-gray-color, 16%);\r\n    padding: $base-spacing 0;\r\n    hr {\r\n        margin: $base-spacing 0;\r\n    }\r\n}\r\n\r\n.site-footer {\r\n    @extend .clearfix;\r\n    padding: $base-spacing 0;\r\n    a {\r\n        @extend .link;\r\n    }\r\n    small {\r\n        display: block;\r\n        font-size: rem(12);\r\n        color: darken($medium-gray-color, 10%);\r\n    }\r\n    .block {\r\n        display: block;\r\n    }\r\n}\r\n\r\n.video-container {\r\n    position: relative;\r\n    padding-bottom: 56.25%;\r\n    padding-top: 30px;\r\n    height: 0;\r\n    overflow: hidden;\r\n    iframe,\r\n    object,\r\n    embed {\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n}\r\n\r\n.divider {\r\n    border-top: 0.2em solid lighten($light-gray-color, 13%);\r\n    margin-bottom: $base-spacing * 2;\r\n    margin-top: $base-spacing * 2;\r\n}\r\n\r\n// This applies from 0px to 600px\r\n@media (max-width: 600px) {\r\n    .date-label {\r\n        float: left !important;\r\n        border: 0 !important;\r\n        margin-left: -2px !important;\r\n        margin-top: 2px;\r\n        margin-right: 1em;\r\n    }\r\n    .post-item {\r\n        border: 1px solid lighten($light-gray-color, 10%);\r\n        padding: 0 0.5em;\r\n        background: lighten($light-gray-color, 15%);\r\n    }\r\n    .article-title {\r\n        border-bottom: none !important;\r\n    }\r\n    .post-link {\r\n        &:hover,\r\n        &:focus,\r\n        &:active {\r\n            border-bottom: 2px solid transparent;\r\n            color: $blue-color;\r\n        }\r\n    }\r\n}",
		"/**\r\n* Syntax highlighting styles\r\n*/\r\n.highlight {\r\n  margin: $base-spacing 0;\r\n  padding: 0;\r\n  box-shadow: 0px 0px 2px rgba($black-color, .1);\r\n\r\n  .highlighter-rouge &, &, .hll, pre, code {\r\n    background-color: lighten($light-gray-color, 15%) !important;\r\n  }\r\n\r\n  pre {\r\n    margin: 0;\r\n    padding: $base-spacing;\r\n    white-space: pre;\r\n    line-height: 23px;\r\n    overflow-x: auto;\r\n    margin-bottom: 0;\r\n    word-break: inherit;\r\n    word-wrap: inherit;\r\n\r\n    &, code {\r\n      color: $base-font-color;\r\n    }\r\n\r\n    code {\r\n      white-space: pre;\r\n      padding: 0 !important;\r\n\r\n      * {\r\n        white-space: nowrap; // this sets all children inside to nowrap\r\n      }\r\n    }\r\n  }\r\n\r\n  .c     { color: #998; font-style: italic } // Comment\r\n  .err   { color: #a61717; background-color: #e3d2d2 } // Error\r\n  .k     { font-weight: bold } // Keyword\r\n  .o     { font-weight: bold } // Operator\r\n  .cm    { color: #998; font-style: italic } // Comment.Multiline\r\n  .cp    { color: #999; font-weight: bold } // Comment.Preproc\r\n  .c1    { color: #998; font-style: italic } // Comment.Single\r\n  .cs    { color: #999; font-weight: bold; font-style: italic } // Comment.Special\r\n  .gd    { color: #000; background-color: #fdd } // Generic.Deleted\r\n  .gd .x { color: #000; background-color: #faa } // Generic.Deleted.Specific\r\n  .ge    { font-style: italic } // Generic.Emph\r\n  .gr    { color: #a00 } // Generic.Error\r\n  .gh    { color: #999 } // Generic.Heading\r\n  .gi    { color: #000; background-color: #dfd } // Generic.Inserted\r\n  .gi .x { color: #000; background-color: #afa } // Generic.Inserted.Specific\r\n  .go    { color: #888 } // Generic.Output\r\n  .gp    { color: #555 } // Generic.Prompt\r\n  .gs    { font-weight: bold } // Generic.Strong\r\n  .gu    { color: #aaa } // Generic.Subheading\r\n  .gt    { color: #a00 } // Generic.Traceback\r\n  .kc    { font-weight: bold } // Keyword.Constant\r\n  .kd    { font-weight: bold } // Keyword.Declaration\r\n  .kp    { font-weight: bold } // Keyword.Pseudo\r\n  .kr    { font-weight: bold } // Keyword.Reserved\r\n  .kt    { color: #458; font-weight: bold } // Keyword.Type\r\n  .m     { color: #099 } // Literal.Number\r\n  .s     { color: #d14 } // Literal.String\r\n  .na    { color: #008080 } // Name.Attribute\r\n  .nb    { color: #0086B3 } // Name.Builtin\r\n  .nc    { color: #458; font-weight: bold } // Name.Class\r\n  .no    { color: #008080 } // Name.Constant\r\n  .ni    { color: #800080 } // Name.Entity\r\n  .ne    { color: #900; font-weight: bold } // Name.Exception\r\n  .nf    { color: #900; font-weight: bold } // Name.Function\r\n  .nn    { color: #555 } // Name.Namespace\r\n  .nt    { color: #000080 } // Name.Tag\r\n  .nv    { color: #008080 } // Name.Variable\r\n  .ow    { font-weight: bold } // Operator.Word\r\n  .w     { color: #bbb } // Text.Whitespace\r\n  .mf    { color: #099 } // Literal.Number.Float\r\n  .mh    { color: #099 } // Literal.Number.Hex\r\n  .mi    { color: #099 } // Literal.Number.Integer\r\n  .mo    { color: #099 } // Literal.Number.Oct\r\n  .sb    { color: #d14 } // Literal.String.Backtick\r\n  .sc    { color: #d14 } // Literal.String.Char\r\n  .sd    { color: #d14 } // Literal.String.Doc\r\n  .s2    { color: #d14 } // Literal.String.Double\r\n  .se    { color: #d14 } // Literal.String.Escape\r\n  .sh    { color: #d14 } // Literal.String.Heredoc\r\n  .si    { color: #d14 } // Literal.String.Interpol\r\n  .sx    { color: #d14 } // Literal.String.Other\r\n  .sr    { color: #009926 } // Literal.String.Regex\r\n  .s1    { color: #d14 } // Literal.String.Single\r\n  .ss    { color: #990073 } // Literal.String.Symbol\r\n  .bp    { color: #999 } // Name.Builtin.Pseudo\r\n  .vc    { color: #008080 } // Name.Variable.Class\r\n  .vg    { color: #008080 } // Name.Variable.Global\r\n  .vi    { color: #008080 } // Name.Variable.Instance\r\n  .il    { color: #099 } // Literal.Number.Integer.Long\r\n}\r\n"
	],
	"names": [],
	"mappings": "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"
}